[{"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/index.js":"1","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/App.js":"2","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/reportWebVitals.js":"3","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Main.js":"4","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Guide.js":"5","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/TxtInput.js":"6","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/TextEditor.js":"7","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Templates.js":"8","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/SignIn.js":"9","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Workspace.js":"10","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/PPTSel.js":"11","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/FindIdPw.js":"12","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/PPTUpload.js":"13","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/SignUp.js":"14","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/UpdateInfo.js":"15","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/PPTEditor.js":"16","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/MyTextarea.js":"17","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/TextInput.js":"18","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/MyButton.js":"19","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/api/kobert.js":"20","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/api/gpt.js":"21","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/index.js":"22","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/App.js":"23","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/reportWebVitals.js":"24","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/TxtInput.js":"25","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/UpdateInfo.js":"26","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/SignUp.js":"27","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/PPTSel.js":"28","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/PPTUpload.js":"29","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Templates.js":"30","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Main.js":"31","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Guide.js":"32","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/FindIdPw.js":"33","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/TextEditor.js":"34","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/SignIn.js":"35","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Workspace.js":"36","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/PPTEditor.js":"37","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/MyButton.js":"38","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/TextInput.js":"39","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/MyTextarea.js":"40","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/api/kobert.js":"41","/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/api/gpt.js":"42"},{"size":588,"mtime":1698466401483,"results":"43","hashOfConfig":"44"},{"size":3710,"mtime":1698471412659,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1698466401483,"results":"46","hashOfConfig":"44"},{"size":4506,"mtime":1698466401334,"results":"47","hashOfConfig":"44"},{"size":4119,"mtime":1698466401334,"results":"48","hashOfConfig":"44"},{"size":6789,"mtime":1698500173133,"results":"49","hashOfConfig":"44"},{"size":548,"mtime":1698466401335,"results":"50","hashOfConfig":"44"},{"size":5140,"mtime":1698466401335,"results":"51","hashOfConfig":"44"},{"size":7110,"mtime":1698466401334,"results":"52","hashOfConfig":"44"},{"size":2210,"mtime":1698466401335,"results":"53","hashOfConfig":"44"},{"size":1393,"mtime":1698466401334,"results":"54","hashOfConfig":"44"},{"size":6996,"mtime":1698466401333,"results":"55","hashOfConfig":"44"},{"size":2062,"mtime":1698466401334,"results":"56","hashOfConfig":"44"},{"size":17967,"mtime":1698466401334,"results":"57","hashOfConfig":"44"},{"size":10144,"mtime":1698466401335,"results":"58","hashOfConfig":"44"},{"size":1339,"mtime":1698466401334,"results":"59","hashOfConfig":"44"},{"size":612,"mtime":1698466401334,"results":"60","hashOfConfig":"44"},{"size":556,"mtime":1698480704914,"results":"61","hashOfConfig":"44"},{"size":396,"mtime":1698466401334,"results":"62","hashOfConfig":"44"},{"size":568,"mtime":1698504333533,"results":"63","hashOfConfig":"44"},{"size":3789,"mtime":1698470796725,"results":"64","hashOfConfig":"44"},{"size":588,"mtime":1698505466651,"results":"65","hashOfConfig":"66"},{"size":3710,"mtime":1698505466492,"results":"67","hashOfConfig":"66"},{"size":362,"mtime":1698505466652,"results":"68","hashOfConfig":"66"},{"size":6791,"mtime":1698584670463,"results":"69","hashOfConfig":"66"},{"size":10144,"mtime":1698505466495,"results":"70","hashOfConfig":"66"},{"size":17967,"mtime":1698505466494,"results":"71","hashOfConfig":"66"},{"size":1393,"mtime":1698505466494,"results":"72","hashOfConfig":"66"},{"size":2062,"mtime":1698505466494,"results":"73","hashOfConfig":"66"},{"size":5140,"mtime":1698505466494,"results":"74","hashOfConfig":"66"},{"size":4506,"mtime":1698505466493,"results":"75","hashOfConfig":"66"},{"size":4119,"mtime":1698505466493,"results":"76","hashOfConfig":"66"},{"size":6996,"mtime":1698505466493,"results":"77","hashOfConfig":"66"},{"size":548,"mtime":1698505466494,"results":"78","hashOfConfig":"66"},{"size":7110,"mtime":1698505466494,"results":"79","hashOfConfig":"66"},{"size":2210,"mtime":1698505466495,"results":"80","hashOfConfig":"66"},{"size":1339,"mtime":1698505466494,"results":"81","hashOfConfig":"66"},{"size":396,"mtime":1698505466493,"results":"82","hashOfConfig":"66"},{"size":556,"mtime":1698505466494,"results":"83","hashOfConfig":"66"},{"size":612,"mtime":1698505466493,"results":"84","hashOfConfig":"66"},{"size":568,"mtime":1698505466493,"results":"85","hashOfConfig":"66"},{"size":3789,"mtime":1698505466493,"results":"86","hashOfConfig":"66"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1xsdo58",{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rsg0pr",{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/index.js",[],[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/App.js",["223","224","225","226"],[],"//import logo from './logo.svg';\nimport './App.css';\nimport Templates from './components/Templates';\nimport Guide from './components/Guide';\nimport TxtInput from './components/TxtInput';\nimport PPTSel from './components/PPTSel';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/Main';\nimport SignIn from './components/SignIn'\nimport SignUp from './components/SignUp'\nimport FindIdPw from './components/FindIdPw'\nimport UpdateInfo from './components/UpdateInfo'\nimport TextEditor from \"./components/TextEditor\";\nimport PPTUpload from \"./components/PPTUpload\";\nimport Workspace from \"./components/Workspace\";\nimport PPTEditor from \"./components/PPTEditor\";\nimport { BrowserRouter as Router, Routes, Route, Switch, Link, Navigate } from 'react-router-dom';\nimport {useState, createContext} from 'react';\n\n/*아직 DB 구축 전이라서 이렇게 넣음..*/\nconst projects = [\n  {\n    id: 1,\n    type: \"ppt\",\n    title: \"프로젝트 1\"\n  },\n  {\n    id: 2,\n    type: \"ppt\",\n    title: \"프로젝트 2\"\n  },\n  {\n    id: 3,\n    type: \"script\",\n    title: \"프로젝트 3\"\n  },\n];\n\nexport const AuthContext = createContext();\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = () => {\n    // 로그인 처리\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // 로그아웃 처리\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"key\");\n  };\n\n  /*아직 DB 구축 전이라서 이렇게 넣음..*/\n  const getProjectById = (id) => {\n    return projects.find((project) => project.id === parseInt(id));\n  };\n\n  return (\n  \n    <BrowserRouter>\n     <AuthContext.Provider value={{ isLoggedIn, handleLogin, handleLogout }}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div>\n            <div id=\"nav\">\n                <Link to='/'><img src={require('./logo.png')} alt=\"logo\" /></Link>\n                <ul>\n                <li><Link to=\"/Workspace\" className=\"nav1\">WORKSPACE</Link></li>\n                <li><Link to='/Templates' className='nav1'>TEMPLATE</Link></li>\n                <li><Link to=\"/Guide\" className=\"nav1\">GUIDE</Link></li>\n                {isLoggedIn? (<li><Link to=\"/UpdateInfo\" className=\"nav1\">MYPAGE</Link></li>):(\n                        <li><Link to=\"/SignIn\" className=\"nav1\">MYPAGE</Link></li>\n                )}\n                {/* <li><Link to='/SignIn' className=\"logoutB\">s</Link></li> */}\n                {isLoggedIn? (<li><Link to=\"/\" onClick={handleLogout} className=\"logoutB\">logout</Link></li>):(\n                        <li><Link to=\"/SignIn\" className=\"logoutB\">login</Link></li>\n                                )}\n                </ul> \n            </div>\n            <div>\n            </div>\n        </div>\n        <Routes>\n          <Route path=\"/\" element={<Main />} exact/>\n          <Route path=\"/Templates\" element={<Templates />}/>\n          <Route path=\"/Guide\" element={<Guide />}/>\n          <Route path=\"/TxtInput\" element={<TxtInput />}/>\n          <Route path=\"/PPTSel\" element={<PPTSel />}/>\n          <Route path=\"/SignIn\" element={<SignIn />}/>\n          <Route path=\"/SignUp\" element={<SignUp />}/>\n          <Route path=\"/FindIdPw\" element={<FindIdPw />}/>\n          <Route path=\"/UpdateInfo\" element={<UpdateInfo />}/>\n          <Route path=\"/TextEditor\" element={<TextEditor />}/>\n          <Route path=\"/PPTUpload\" element={<PPTUpload />}/>\n          <Route path=\"/Workspace\" element={<Workspace projects={projects} />} />\n          <Route path=\"/PPTEditor\" element={<PPTEditor />}/>\n        </Routes>\n        {/* <Main /> */}\n      </header>\n    </div>\n     </AuthContext.Provider>\n    </BrowserRouter>\n   \n  );\n}\n \nexport default App;\n","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/reportWebVitals.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Main.js",["227","228","229","230","231","232","233"],[],"import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\n\n// import{Link} from 'react-router-doms'\nfunction Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {/*{'Copyright © '}*/}\n            {/*<Link color=\"inherit\" href=\"https://naver.com/\">*/}\n            {/*    Your Website*/}\n            {/*</Link>{' '}*/}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\n\nconst defaultTheme = createTheme({\n    typography: {\n        fontSize:12,\n        fontFamily: [\n            'Noto Sans KR'\n        ].join(','),\n    },\n});\n\nexport default function SignInPage() {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        console.log({\n            email: data.get('id'),\n            password: data.get('password'),\n        });\n    };\n\n    return (\n        <div>\n            <div className='a'>\n            {/* <div id=\"nav\">\n                <Link to='/'><img src={require('./logo.png')} alt=\"logo\" /></Link>\n                <ul>\n                <li><a href=\"\" className=\"nav1\">WORKSPACE</a></li>\n                <li><Link to='/Templates' className='nav1'>TEMPLATE</Link></li>\n                <li><Link to=\"/Guide\" className=\"nav1\">GUIDE</Link></li>\n                <li><Link to=\"/TextEditor\" className=\"nav1\">MYPAGE</Link></li>\n                <li><Link to='/PPTSel' className=\"logoutB\">logout</Link></li>\n                </ul> \n            </div> */}\n                <div className='titleLogo'>\n                    <div className='logoImage'>\n                        <img src={require('./images/logoBlue.png')} width='500px'/>\n                        <p class='tip'>Tip. 색이 뚜렷한 명사를 사용할수록 추천 디자인은 풍성해집니다 </p>\n                    </div>\n\n                </div>\n                <div className='convertToDiv'>\n                    {/*div 클릭하면 발표자료 만드는 페이지로 이동 (우선 PPTUpload 페이지로 이동하도록 해놨어용~ 수정하기!)*/}\n                    <Link to=\"./TxtInput\" style={{ textDecoration: 'none' }}>\n                        <div className='convertToPresent'>\n                            <div className='leftPre'>\n                                <img src={require('./images/lineWhite.png')} width='500px'/>\n                                <p className='MaintoSub'style={{color :'white'}}> 텍스트만 붙여 넣으면 프레젠테이션 자료 완성</p>\n                                <p className='MaintoSub'style={{color :'white'}}> 내용에 맞는 디자인 추천까지</p>\n                            </div>\n                            <div className='rightPre'>\n                                <p className='MainconvertTo' style={{color :'#D0D0D0'}}>Convert to</p>\n                                <p className='MaintoText' style={{color :'white'}}>Presentation</p>\n                            </div>\n                        </div>\n                    </Link>\n\n                    {/*div 클릭하면 PPTUpload 페이지로 이동*/}\n                    <Link to=\"./PPTUpload\" style={{ textDecoration: 'none' }}>\n                        <div className='convertToScript'>\n                            <div className='leftScr'>\n                                <div>\n                                    {/* 영어 전용 폰트로 바꾸기 */}\n                                    <p className='MainconvertTo' style={{color :'#ACABAB'}}>Convert to</p> \n                                    <p className='MaintoText' style={{color :'#4982F7'}}>Script</p>\n                                </div>\n                            </div>\n                            <div className='rightScr'>\n                                <p className='MaintoSub' style={{color :'#4982F7'}}> 프레젠테이션만 붙여넣으면 발표 대본 완성</p>\n                                <p className='MaintoSub' style={{color :'#4982F7'}}> 한국어 맞춤으로 자연스러운 흐름</p>\n                                <img src={require('./images/lineBlue.png')} width='500px'/>\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Guide.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/TxtInput.js",["234","235","236","237","238"],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/TextEditor.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Templates.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/SignIn.js",["239","240","241"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {useContext,useState} from 'react';\nimport { AuthContext } from '../App';\nimport { json, useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst defaultTheme = createTheme({\n    typography: {\n        fontSize:12,\n        fontFamily: [\n            'Noto Sans KR'\n        ].join(','),\n    },\n});\n\nexport default function SignInPage() {\n    const [loginId, setLoginId] = useState('');\n    const [password, setPassword] = useState('');\n    const { isLoggedIn, handleLogin } = useContext(AuthContext);\n    const navigate = useNavigate();\n\n    const handleSubmit = (event) => {\n            event.preventDefault();\n            fetch('/jwt-api-login/login', {\n                method:'POST',\n                headers:{\n                    'Content-Type':'application/json',\n                },\n                body: JSON.stringify({loginId,password}),\n            })\n                // .then(response=>response.json())\n                .then((response)=>{\n                    if(response.ok) {\n                        return response.text();\n                    }else{\n                        throw new Error('로그인에 실패했습니다.');\n                    }\n                })\n                .then((data)=>{\n                    const jwtToken = data;\n                    axios.defaults.headers.common[\n                        \"Authorization\"\n                    ] = `Bearer ${jwtToken}`;\n                    localStorage.setItem('jwtToken',jwtToken);\n                    console.log(jwtToken);\n                    handleLogin();\n                    navigate(\"/\");\n                })\n                .catch((error)=>{\n                    console.error(error);\n                    alert('로그인에 실패했습니다.');\n\n                });\n\n    };\n\n    return (\n        <div>\n        {/* <ThemeProvider theme={defaultTheme}> */}\n            <div>{/* <Container component=\"main\" maxWidth=\"xs\"> */}\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 10,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        \"& fieldset\": {borderTopColor:'white',\n                                        borderRightColor:'white',\n                                        borderLeftColor:'white',\n                                        borderBottomColor:'black',\n                                        borderRadius:0}\n                    }}\n                >\n                    <div class = \"pageDiv\">\n                        <div class =\"pageTitle\" >\n                            로그인\n                        </div>\n                        <div class =\"pageAddScript\" >\n                            당신의 작업은 소중하니까\n                        </div>\n                    </div>\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"loginId\"\n                            label=\"Id\"\n                            value={loginId}\n                            onChange={(e)=>setLoginId(e.target.value)}\n                            name=\"loginId\"\n                            autoComplete=\"username\"\n                            autoFocus\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={(e)=>setPassword(e.target.value)}\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <div class=\"easyLogin\">\n                        {/* <a href=\"/\"><img src={require('./images/easyLogin.png')} width=\"350px\" alt=\"Easy-Login\" border=\"0\" /></a>                         */}\n                        </div>\n                        {isLoggedIn ? (\n                            <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2, \n                                backgroundColor: '#4982F7',\n                                fontFamily: 'Noto Sans KR',\n                                borderRadius:2,\n                                boxShadow:5,\n                                textDecorationStyle:'bold'\n                            }}\n                            onClick={handleSubmit}\n                        >\n                            이 문자열이 보이면 안 되는데\n                        </Button>\n                        ):(\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2, \n                                backgroundColor: '#4982F7',\n                                fontFamily: 'Noto Sans KR',\n                                borderRadius:2,\n                                boxShadow:5,\n                                textDecorationStyle:'bold'\n                            }}\n                            onClick={handleSubmit}\n                        >\n                            Login\n                        </Button>\n                        )\n                        }\n                        \n                        \n                        <Grid container sx={{textAlign:'justify'}}>\n                            <Grid item xs>\n                                <Link href=\"/SignUp\" \n                                variant=\"body2\" \n                                sx={{color:'#9B9B9B', textDecorationLine:'none', margin:'0',padding:0}}>\n                                    회원가입\n                                </Link>\n                            </Grid>\n                            <Grid item >\n                                <Link href=\"/FindIdPw\" \n                                variant=\"body2\"\n                                sx={{color:'#9B9B9B', textDecorationLine:'none'}}\n                                >\n                                    {\"아이디 / 비밀번호 찾기\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </div>\n        </div> \n    );\n}","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/Workspace.js",["242","243","244","245","246"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Workspace.css';\n\nfunction Workspace({ projects }) {\n  const [selected, setSelected] = useState('ppt');\n  const [menuOpen, setMenuOpen] = useState(null);\n  const navigate = useNavigate();\n\n  const handleProjectClick = (type, projectId) => {\n    if(type === 'ppt') {\n      navigate(`/PPTEditor/${projectId}`);\n    }\n    else if (type === 'script') {\n      navigate(`/TextEditor/${projectId}`);\n    }\n  };  \n\n  // 더보기 메뉴 토글\n  const toggleMenu = (id) => {\n    setMenuOpen(prevId => prevId === id ? null : id);\n  };\n\n  const handleEditProject = (project) => {/* 수정 기능*/};\n  const handleDeleteProject = (id) => {/* 삭제 기능*/};\n  const handleDownloadProject = (project) => {/* 다운로드 기능*/};\n\n  return (\n    <div className=\"workspace\">\n      <div className=\"project-container\">\n        <button\n          className={`project-btn ppt ${selected === 'ppt' ? 'active' : ''}`}\n          onClick={() => setSelected('ppt')}\n        >\n          PPT\n        </button>\n        <button\n          className={`project-btn script ${selected === 'script' ? 'active' : ''}`}\n          onClick={() => setSelected('script')}\n        >\n        Script \n        </button>\n      </div>\n      {/* 선택된 버튼에 따라 배경색상 변경 */}\n      <div \n        className={`project-list`}\n        style={{\n          backgroundColor: selected === 'ppt' ? 'skyblue' : 'lightgray',\n        }}\n      >\n        {projects.filter((project) => project.type === selected).map((project) =>\n          (\n            <div key={project.id} \n                className={`project`} \n                onClick={() => handleProjectClick(project.type || 'script', project.id)}>\n              <div className=\"title\">\n                <span>\n                  {project.title.length > 10 ? project.title.slice(0,10) + '...' : project.title}\n                </span>\n              </div>\n              <div className=\"thumbnail\">\n                <img src={project.thumbnail} alt={`${project.title} thumbnail`} />\n              </div>\n            </div>\n          ))}\n\n      </div>\n    </div>\n  );\n}\n\nexport default Workspace;\n","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/PPTSel.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/FindIdPw.js",["247","248","249","250"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\n\n// import{Link} from 'react-router-doms'\nfunction Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {/*{'Copyright © '}*/}\n            {/*<Link color=\"inherit\" href=\"https://naver.com/\">*/}\n            {/*    Your Website*/}\n            {/*</Link>{' '}*/}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\n\nconst defaultTheme = createTheme({\n    typography: {\n        fontSize:12,\n        fontFamily: [\n            'Noto Sans KR'\n        ].join(','),\n    },\n});\n\nexport default function FindIdPwPage() {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        console.log({\n            email: data.get('id'),\n            password: data.get('password'),\n        });\n    };\n\n    return (\n        <div>\n        {/* <ThemeProvider theme={defaultTheme}> */}\n            <div>{/* <Container component=\"main\" maxWidth=\"xs\"> */}\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 10,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        \"& fieldset\": {borderTopColor:'white',\n                                        borderRightColor:'white',\n                                        borderLeftColor:'white',\n                                        borderBottomColor:'black',\n                                        borderRadius:0}\n                    }}\n                >\n                \n                    <div class = \"pageDiv\">\n                        <div class =\"pageTitle\" >\n                            아이디 / 비밀번호 찾기\n                        </div>\n                        <div class =\"pageAddScript\" >\n                            당신의 작업은 소중하니까\n                        </div>\n                    </div>\n                    \n                    <table className='findDiv'><tr>\n                    <div className='findContent'>\n                        <td><div className='middleScript'>아이디 찾기</div>\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                    <Grid container spacing={2}>\n                    <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid item xs={12} sm={9}>\n                            <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"EMAIL\"\n                            label=\"EMAIL\"\n                            name=\"EMAIL\"\n                            autoComplete=\"EMAIL\"\n                            autoFocus\n                        />\n                        </Grid>\n                        <Grid item xs={12} sm={3}>\n                            <button className='sendBtn'>발송</button>\n                        </Grid>\n                        </Grid>\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid item xs={12} sm={9}>\n                            <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        </Grid>\n                        < Grid item xs = { 12 } sm = { 3 }>\n                        <button className='authenBtn'>인증</button>\n                        </ Grid >\n                        </Grid>\n                        </Grid>\n                    </Box></td>\n                    </div>\n                    <td><div className='horizontalLine'></div></td>\n                    <td><div className='findContent'>\n                    <div className='middleScript'>비밀번호 찾기</div>\n                    {/* <Grid container spacing={2}> */}\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                        <Grid>\n                            <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"id\"\n                            label=\"Id\"\n                            name=\"id\"\n                            autoComplete=\"id\"\n                            autoFocus\n                        />\n                        </Grid>\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid item xs={12} sm={9}>\n                            <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"email\"\n                            label=\"EMAIL\"\n                            type=\"email\"\n                            id=\"email\"\n                        />\n                        </Grid>\n                        <Grid item xs={12} sm={3}>\n                            <button className='sendBtn'>발송</button>\n                        </Grid>\n                        </Grid>\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item xs={12} sm={9}>\n                            <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"email_authentication\"\n                            label=\"전송된 인증번호를 입력해주세요\"\n                            type=\"email_authentication\"\n                            id=\"email_authentication\"\n                        /> \n                        </Grid>\n                        < Grid item xs = { 12 } sm = { 3 }>\n                        <button className='authenBtn'>인증</button>\n                        </ Grid >\n                        </Grid>\n                    </Box>\n                    {/* </Grid> */}\n                    </div></td>\n                    </tr></table>\n                </Box>\n                \n                {/*<Copyright sx={{ mt: 8, mb: 4 }} />*/}\n            </div>{/* </Container> */}\n        {/* </ThemeProvider> */}\n        </div> \n    );\n}","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/PPTUpload.js",["251"],[],"import React, { useRef, useState } from 'react';\nimport './PPTUpload.css';\nimport MyButton from './MyButton.js'\n\nfunction PPTUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const fileInputRef = useRef();\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  const handleBrowseFiles = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileSelect = (event) => {\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      setSelectedFile(files[0]);\n    }\n  };\n\n  return (\n    <div>\n      {/* 일단 제가 사용한 css 적용할게요_jy */}\n      <p class='pageTitle'>PPT to Script</p>\n      <p class='pageAddScript'>버튼 하나, 나의 든든한 서포터</p> \n      {/* <p style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', color:'black' }}>버튼 하나, 나의 든든한 서포터</p> */}\n      <p style={{ color: 'lightgray', marginTop: '100px'}}>PPT 업로드</p>\n\n      <input\n        type=\"file\"\n        accept=\".ppt,.pptx\"\n        ref={fileInputRef}\n        onChange={handleFileUpload}\n        hidden\n      />\n\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n          <div className=\"ppt-upload-box\" onDrop={handleFileSelect} onDragOver={(event) => event.preventDefault()}>\n              <p>{selectedFile ? selectedFile.name : \"이곳에 파일을 드래그하세요.\"}</p>\n          </div>\n\n          <MyButton \n              text={'파일찾기'}\n              onClick={handleBrowseFiles}\n              type={\"gray\"}\n              size={\"small\"}\n          />\n      </div>\n\n      <a\n        href=\"#\"\n        style={{ color: '#4982F7', textDecoration: 'underline' }}\n        onClick={handleBrowseFiles}\n      >\n        워크스페이스에서 찾기\n      </a>\n\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '60px'}}>\n      <MyButton text={'대본생성'}\n            type={\"blue\"}\n      />\n      </div>\n    </div>\n  );\n}\n\nexport default PPTUpload;\n","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/SignUp.js",["252","253","254","255","256","257","258","259","260"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst defaultTheme = createTheme();\n\nexport default function SignUpPage() {\n  const [loginId, setLoginId]=React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [passwordCheck, setPasswordCheck] = React.useState('');\n  const [nickname, setNickname] = React.useState('');\n  const [birthYear, setBirthYear ] = React.useState('');\n  const [birthMonth, setBirthMonth ] = React.useState('');\n  const [birthDay, setBirthDay] = React.useState('');\n  const [job, setJob] = React.useState('');\n  const [showPolicyPopup, setShowPolicyPopup] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if(!agreePolicy || !agreeInfoCollection){\n      alert('필수 항목에 동의해야 합니다.');\n      return;\n    }\n    \n    if (!loginId || !email || !password || !passwordCheck || !nickname) {\n      alert('필수 정보를 입력하지 않았습니다.');\n      return;\n    }\n    \n    fetch('/jwt-api-login/join',{\n      method:'POST',\n      headers:{\n        'Content-Type':'application/json',\n      },\n      body:JSON.stringify({nickname,email,loginId,password,passwordCheck,birthYear,birthMonth,birthDay,job,gender,agreePolicy:agreePolicy ? 'Y' : 'N',agreeInfoCollection:agreeInfoCollection ? 'Y' : 'N',agreePromotionEmails:agreePromotionEmails ? 'Y' : 'N'}),\n    })\n      .then((response)=>response.text())\n      .then((data)=>{\n        console.log(data);\n        if (data === \"로그인 아이디가 중복됩니다.\") {\n          alert(\"로그인 아이디가 중복됩니다.\");\n        } else if (data === \"이메일이 중복됩니다.\") {\n          alert(\"이메일이 중복됩니다.\");\n        } else if (data === \"닉네임이 중복됩니다.\") {\n          alert(\"닉네임이 중복됩니다.\");\n        } else if (data === \"비밀번호가 일치하지 않습니다.\") {\n          alert(\"비밀번호가 일치하지 않습니다.\");\n        } else if (data === \"회원가입 성공\") {\n          alert(\"정상적으로 회원등록이 되었습니다!\");\n          navigate('/SignIn');\n        }\n      })\n      .catch((error)=>{\n        console.error(error);\n      });\n\n\n\n  };\n  const handleId = (event) =>{\n    event.preventDefault();\n  fetch('/jwt-api-login/check-id', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      loginId: loginId,\n    }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.available) {\n        alert('사용할 수 없는 아이디입니다. 다른 아이디를 입력해주세요.');\n      } else {\n        alert('사용 가능한 아이디입니다.');\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n  const handleEmail = (event) =>{\n    event.preventDefault();\n  fetch('/jwt-api-login/check-email', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email: email,\n    }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.available) {\n        alert('중복된 이메일입니다. 다른 이메일을 입력해주세요.');\n      } else {\n        alert('사용 가능한 이메일입니다.');\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n  const handlePasswordCheck = (event) => {\n    event.preventDefault();\n  \n    if (password !== passwordCheck) {\n      alert('비밀번호가 일치하지 않습니다.');\n      return;\n    } else {\n      alert('비밀번호가 확인되었습니다.')\n    }\n  };\n  const [gender, setGender] = useState('');\n\n  const handleGenderChange = (event) => {\n    setGender(event.target.value);\n  };\n\n  const [agreePolicy, setAgreePolicy] = useState(false);\n  const [agreeInfoCollection, setAgreeInfoCollection] = useState(false);\n  const [agreePromotionEmails, setAgreePromotionEmails] = useState(false);\n  \n  const handleAgreePolicyChange = (event) => {\n    setAgreePolicy(event.target.checked);\n    setAgreeInfoCollection(event.target.checked);\n    setAgreePromotionEmails(event.target.checked);\n  };\n\n  const handleAgreePolicyClick = () => {\n    showAgreePolicyPopup();\n  };\n  \n  const handleAgreeInfoCollectionClick = () => {\n    showAgreeInfoCollection();\n  };\n  \n  const handleAgreePromotionEmailsClick = () => {\n    showAgreePromotionEmails();\n  };\n\n  // 각 약관 팝업 표시 함수\n  const showAgreePolicyPopup = () => {\n    alert(`\n    제 1조 (목적)\n    이 약관은 서비스 이용자가 Switch Note 플랫폼을 이용함에 있어 필요한 규정과 권리, 의무, 책임 등 기본적인 사항을 정하는 것을 목적으로 합니다.\n    \n    제 2조 (약관의 효력 및 변경)\n    1. 본 약관은 서비스를 이용하고자 하는 모든 사용자에게 적용됩니다.\n    2. Switch Note는 필요한 경우 언제든지 본 약관을 변경할 수 있으며, 변경된 약관은 Switch Note 웹사이트나 애플리케이션 내에서 공지함으로써 효력을 발생합니다.\n    \n    제 3조 (서비스의 제공 및 중단)\n    1. Switch Note는 회원에게 지속적으로 안정적인 서비스를 제공하기 위해 최선의 노력을 다합니다.\n    2. 다만, 시스템 점검, 보수, 장애 발생 등 부득이한 사유로 인해 일시적으로 서비스 제공이 중단될 수 있습니다.\n    \n    기타 상세한 내용은 해당 웹사이트나 애플리케이션에서 확인하실 수 있습니다.\n    `);\n  };\n  \n  const showAgreeInfoCollection = () => {\n    alert(`\n    제 1조 (개인 정보 수집 항목)\n    1. Switch Note는 서비스 제공을 위해 다음과 같은 개인 정보를 수집합니다:\n       - 이름, 이메일 주소, 연락처 등 회원 가입 시 제공된 정보\n       - 서비스 이용 기록, 접속 로그 등의 기술적인 정보\n    \n    제 2조 (개인 정보 수집 및 이용 목적)\n    1. Switch Note는 다음과 같은 목적으로 개인 정보를 수집 및 이용합니다:\n       - 회원 가입 및 관리\n       - 서비스 제공 및 운영\n       - 공지사항 전달 등 마케팅 활동\n    \n    제 3조 (개인 정보 보유 기간)\n    1. Switch Note는 회원 탈퇴 시나 서비스 종료 요청 시까지 개인 정보를 보유합니다.\n    2. 단, 법령에 따라 보관이 필요한 경우 해당 법령에서 정한 기간 동안 개인 정보를 보관할 수 있습니다.\n    \n    기타 상세한 내용은 해당 웹사이트나 애플리케이션에서 확인하실 수 있습니다.\n    `);\n  };\n  \n  const showAgreePromotionEmails = () => {\n    alert(`\n    제 1조 (이벤트 등 프로모션 메일 수신 동의)\n    1. Switch Note는 회원에게 이벤트, 할인 혜택, 새로운 서비스 소식 등을 전달하기 위해 프로모션 메일을 발송할 수 있습니다.\n    2. 회원은 이벤트 등 프로모션 메일 수신에 대한 동의 여부를 선택할 수 있으며, 선택 사항입니다.\n    \n    제 2조 (동의 철회)\n    1. 회원은 언제든지 이벤트 등 프로모션 메일 수신에 대한 동의를 철회할 수 있습니다.\n    2. 동의 철회 시 더 이상 해당 내용을 포함한 프로모션 메일을 받지 않게 됩니다.\n    \n    기타 상세한 내용은 해당 웹사이트나 애플리케이션에서 확인하실 수 있습니다.\n    `);\n  };\n\n\n  return (\n    <div>\n        {/* <ThemeProvider theme={defaultTheme}> */}\n      {/* <div> */}\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n        <div class = \"pageDiv\">\n            <div class =\"pageTitle\" style={{marginTop:'50px'}}>\n                회원가입\n            </div>\n            <div class =\"pageAddScript\" >\n                편리함. 그 이상의 능력에 빠질 준비\n            </div>\n        </div>\n        <div className='signUpDataAll'>\n          <Box component=\"form\"  onSubmit={handleSubmit} noValidate\n          sx={{ mt: 3, alignItems: 'center',\n                        \"& fieldset\": {borderTopColor:'white',\n                                        borderRightColor:'white',\n                                        borderLeftColor:'white',\n                                        borderBottomColor:'black',\n                                        borderRadius:0\n                                        } }}>\n            <div className=\"setData\">\n                <Grid container spacing={2}>\n                <Grid item xs={10}>\n                    <TextField\n                    autoComplete=\"username\"\n                    name=\"loginId\"\n                    required\n                    fullWidth\n                    id=\"loginId\"\n                    label=\"ID\"\n                    value={loginId}\n                    onChange={(e)=>setLoginId(e.target.value)}\n                    autoFocus\n                    />\n                </Grid>\n                <button className='authenBtn' type=\"submit\" onClick={handleId}>확인</button>\n                <Grid item xs={10}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"EMAIL\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)}\n                    />\n                </Grid>\n                <button className='authenBtn' type=\"submit\" onClick={handleEmail}>확인</button>\n                <Grid item xs={12}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"password\"\n                    label=\"Password\"\n                    name=\"password\"\n                    type='password'\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={10}>\n                    <TextField\n                    required\n                    fullWidth\n                    name=\"passwordCheck\"\n                    label=\"Password Check\"\n                    type=\"password\"\n                    id=\"passwordCheck\"\n                    value={passwordCheck}\n                    onChange={(e)=>setPasswordCheck(e.target.value)}\n                    />\n                </Grid>\n                <button className='authenBtn' type=\"submit\" onClick={handlePasswordCheck}>확인</button>\n\n                </Grid>\n            </div>\n            <div className=\"middleScript\">개인정보</div>\n            <div className=\"userData\">\n                <Grid container spacing={2}>\n                <Grid item xs={2} >이름</Grid>\n                <Grid item xs={10}>\n                    <TextField\n                    autoComplete=\"given-name\"\n                    name=\"nickname\"\n                    required\n                    fullWidth\n                    id=\"nickname\"\n                    label=\"\"\n                    autoFocus\n                    type=\"nickname\"\n                    value={nickname}\n                    onChange={(e)=>setNickname(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={2} >성별</Grid>\n                <Grid>\n                <div className=\"select\">\n                <input\n                  type=\"radio\"\n                  id=\"select\"\n                  name=\"gender\"\n                  value=\"Male\"\n                  checked={gender === 'Male'}\n                  onChange={handleGenderChange}\n                />\n                <label htmlFor=\"select\" className={gender === 'Male' ? \"selected\" : \"\"}>남성</label>\n                <input\n                  type=\"radio\"\n                  id=\"select2\"\n                  name=\"gender\"\n                  value=\"Female\"\n                  checked={gender === 'Female'}\n                  onChange={handleGenderChange}\n                />\n                <label htmlFor=\"select2\" className={gender === 'Female' ? \"selected\" : \"\"}>여성</label>\n                \n              </div>\n                </Grid>\n                <div>\n                  \n                </div>\n                <Grid container justifyContent=\"center\" alignItems=\"center\">\n                  생년월일\n                  <Grid item xs={12} sm={3}>\n                    <TextField\n                      required\n                      fullWidth\n                      id=\"birth_year\"\n                      label=\"\"\n                      name=\"birth_year\"\n                      value={birthYear}\n                      onChange={(e)=>setBirthYear(e.target.value)}\n                    />\n                    \n                  </Grid>년\n                  <Grid item xs={12} sm={2}>\n                    <TextField\n                      required\n                      fullWidth\n                      id=\"birth_month\"\n                      label=\"\"\n                      name=\"birth_month\"\n                      value={birthMonth}\n                      onChange={(e)=>setBirthMonth(e.target.value)}\n                    />\n                    \n                  </Grid>월\n                  <Grid item xs={12} sm={2}>\n                    <TextField\n                      required\n                      fullWidth\n                      id=\"birth_day\"\n                      label=\"\"\n                      name=\"birth_day\"\n                      value={birthDay}\n                      onChange={(e)=>setBirthDay(e.target.value)}\n                    />\n                    \n                  </Grid>일 \n                </Grid>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" marginTop={'45px'} paddingLeft={'13px'} marginBottom={'50px'}>\n                  직업\n                  <Grid item xs={10}>\n                  <select name=\"job\" id=\"\" class=\"jobSelect\" onChange={(e) => setJob(e.target.value)}>\n                    <option value=\"0\" selected>현재 직업을 선택하세요</option>\n                    <option value=\"elementary\">초등학생</option>\n                    <option value=\"middle\">중학생</option>\n                    <option value=\"high\">고등학생</option>\n                    <option value=\"college\">대학생</option>\n                    <option value=\"professor\">교수</option>\n                    <option value=\"worker\">직장인</option>\n                    <option value=\"worker\">프리랜서</option>\n                    <option value=\"worker\">주부</option>\n                    <option value=\"worker\">기타</option>\n                  </select> \n                  </Grid>\n                </Grid>\n                \n                \n                \n                </Grid>\n            </div>\n            <div className='middleScript'>이용약관</div>\n            <div className='policy'>\n                <div className='policyContent'>\n                  <div class=\"custom-checkbox\">\n                    <input type=\"checkbox\" id=\"agreePolicy\" checked={agreePolicy} onChange={(e) => setAgreePolicy(e.target.checked)}/>\n                    <label for=\"agreePolicy\">이용약관 동의 (필수)</label>\n                    <button className='sendBtn' onClick={showAgreePolicyPopup}>확인</button>\n                  </div>\n                </div>\n                <div className='policyContent'>\n                  <div class=\"custom-checkbox\">\n                    <input type='checkbox' id='agreeInfoCollection' checked={agreeInfoCollection} onChange={(e) => setAgreeInfoCollection(e.target.checked)}/>\n                    <label for='agreeInfoCollection'>개인 정보 수집 및 이용 동의 (필수)</label>\n                    <button className='sendBtn' onClick={showAgreeInfoCollection}>확인</button>\n                  </div>\n                </div>\n                <div className='policyContent'>\n                  <div class='custom-checkbox'>\n                    <input type='checkbox' id='agreePromotionEmails' checked={agreePromotionEmails} onChange={(e) => setAgreePromotionEmails(e.target.checked)}/>\n                    <label for='agreePromotionEmails'>이벤트 등 프로모션 메일 수신 동의 (선택)</label>\n                    <button className='sendBtn' onClick={showAgreePromotionEmails}>확인</button>\n                  </div>\n                  \n            </div>\n            \n            </div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2,\n                backgroundColor: '#4982F7',\n                fontFamily: 'Noto Sans KR',\n                borderRadius:2,\n                boxShadow:5,\n                textDecorationStyle:'bold',\n                marginBottom: 50\n            }}\n            >\n              회원가입\n            </Button>\n            {/* <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  계정이 이미 있으신가요? 로그인하러 가기\n                </Link>\n              </Grid>\n            </Grid> */}\n            </Box>\n          </div>\n        </Box>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      {/* </div> */}\n      </Container>\n    </div>\n  );\n}\n","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/UpdateInfo.js",["261","262"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState } from 'react';\n\nconst defaultTheme = createTheme();\n\nexport default function UpdateInfoPage() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n  };\n  const [gender, setGender] = useState('');\n\n  const handleGenderChange = (event) => {\n    setGender(event.target.value);\n  };\n\n  return (\n    <div>\n        {/* <ThemeProvider theme={defaultTheme}> */}\n      {/* <div> */}\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n        <div class = \"pageDiv\">\n            <div class =\"pageTitle\" style={{marginTop:'50px'}}>\n                회원정보 수정\n            </div>\n            <div class =\"pageAddScript\" >\n                개인정보는 철저하게\n            </div>\n        </div>\n        <div className='signUpDataAll'>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} \n          sx={{ mt: 3, alignItems: 'center',\n                        \"& fieldset\": {borderTopColor:'white',\n                                        borderRightColor:'white',\n                                        borderLeftColor:'white',\n                                        borderBottomColor:'black',\n                                        borderRadius:0\n                                        } }}>\n            <div className=\"setData\">\n                <Grid container spacing={2}>\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\n                <Grid item xs={12} sm={3}>\n                  Id\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"given-name\"\n                    name=\"id\"\n                    required\n                    fullWidth\n                    id=\"id\"\n                    label=\"Id\"\n                    autoFocus\n                    sx={{width:'300px'}}\n                    />\n                </Grid>\n                    \n                    </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\n                <Grid item xs={12} sm={3}>\n                  EMAIL\n                  </Grid>\n                  <Grid item xs={12} sm={7}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"EMAIL\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    />\n                </Grid>\n                < Grid item xs = { 12 } sm = {2}>\n                  <button className='sendBtn'>발송</button>\n                </ Grid >\n                </ Grid >\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\n                <Grid item xs={12} sm={3}>\n                  {''}\n                  </Grid>\n                  <Grid item xs={12} sm={7}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"email_authentication\"\n                    label=\"전송된 인증번호를 입력해주세요\"\n                    name=\"email_authentication\"\n                    autoComplete=\"email-authentication-number\"\n                    />\n                </Grid>\n                < Grid item xs = { 12 } sm = {2}>\n                  <button className='authenBtn'>인증</button>\n                </ Grid >\n                </ Grid >\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\n                <Grid item xs={12} sm={3}>\n                  Password\n                  </Grid>\n                  <Grid item xs={12} sm={9}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"password\"\n                    label=\"Password\"\n                    name=\"password\"\n                    autoComplete=\"password\"\n                    />\n                </Grid>\n                </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\n                <Grid item xs={12} sm={3}>\n                  PW Check\n                  </Grid>\n                  <Grid item xs={12} sm={9}>\n                    <TextField\n                    required\n                    fullWidth\n                    name=\"password_check\"\n                    label=\"Password Check\"\n                    type=\"password_check\"\n                    id=\"password_check\"\n                    />\n                </Grid>\n                </Grid>\n                </Grid>\n            </div>\n            <div className=\"middleScript\">개인정보</div>\n            <div className=\"userData\">\n                <Grid container spacing={2}>\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\n                <Grid item xs={12} sm={3}>\n                  이름\n                  </Grid>\n                  <Grid item xs={12} sm={9}>\n                    <TextField\n                    autoComplete=\"given-name\"\n                    name=\"user_name\"\n                    required\n                    fullWidth\n                    id=\"user_name\"\n                    label=\"data\"\n                    autoFocus\n                    sx={{width:'300px'}}\n                    />\n                </Grid>\n                </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'} marginLeft={'3px'}>\n                <Grid item xs={2}>\n                  성별\n                  </Grid>\n                  {/* <Grid item xs={12} sm={9}> */}\n                <Grid>\n                  <div className=\"select\">\n                \n                <input\n                  type=\"radio\"\n                  id=\"select\"\n                  name=\"gender\"\n                  value=\"Male\"\n                  checked={gender === 'Male'}\n                  onChange={handleGenderChange}\n                />\n                <label htmlFor=\"select\" className={gender === 'Male' ? \"selected\" : \"\"}>남성</label>\n                \n                  <input\n                  type=\"radio\"\n                  id=\"select2\"\n                  name=\"gender\"\n                  value=\"Female\"\n                  checked={gender === 'Female'}\n                  onChange={handleGenderChange}\n                />\n                <label htmlFor=\"select2\" className={gender === 'Female' ? \"selected\" : \"\"}>여성</label>\n              </div>\n                </Grid>\n                </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\n                생년월일\n                <Grid item xs={12} sm={3} sx={{marginLeft:'35px'}}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"birth_year\"\n                    label=\"\"\n                    name=\"birth_year\"\n                    />\n                </Grid>\n                년\n                <Grid item xs={12} sm={2}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"birth_month\"\n                    label=\"\"\n                    name=\"birth_month\"\n                    />\n                </Grid>\n                월\n                <Grid item xs={12} sm={2}>\n                    <TextField\n                    required\n                    fullWidth\n                    id=\"birth_month\"\n                    label=\"\"\n                    name=\"birth_month\"\n                    />\n                </Grid>\n                일\n                </Grid>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" marginTop={'45px'} paddingLeft={'13px'} marginBottom={'50px'}>\n                  직업\n                  <Grid item xs={10}>\n                  <select name=\"job\" id=\"\" class=\"jobSelect\">\n                    <option value=\"0\" selected>현재 직업을 선택하세요</option>\n                    <option value=\"elementary\">초등학생</option>\n                    <option value=\"middle\">중학생</option>\n                    <option value=\"high\">고등학생</option>\n                    <option value=\"college\">대학생</option>\n                    <option value=\"professor\">교수</option>\n                    <option value=\"worker\">직장인</option>\n                    <option value=\"worker\">프리랜서</option>\n                    <option value=\"worker\">주부</option>\n                    <option value=\"worker\">기타</option>\n                  </select> \n                  </Grid>\n                </Grid>\n                </Grid>\n            </div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2,\n                backgroundColor: '#4982F7',\n                fontFamily: 'Noto Sans KR',\n                borderRadius:2,\n                boxShadow:5,\n                textDecorationStyle:'bold',\n                marginBottom: 50\n            }}\n            >\n              수정완료\n            </Button>\n            {/* <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  계정이 이미 있으신가요? 로그인하러 가기\n                </Link>\n              </Grid>\n            </Grid> */}\n            </Box>\n          </div>\n        </Box>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      {/* </div> */}\n      </Container>\n    </div>\n  );\n}\n","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/PPTEditor.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/MyTextarea.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/TextInput.js",["263"],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/components/MyButton.js",["264"],[],"import React from 'react';\n\nconst MyButton = ({text, type, size, onClick})=>{\n\n    const btnType = ['blue','gray','line'].includes(type)?type:\"default\";\n\n    return(\n        <button className={[\"MyButton\",`MyButton_${type}`,`MyButton_${size}`].join(\" \")} onClick={onClick}>\n            {text}\n        </button>\n    );\n};\n\nMyButton.defaultProps = {\n    type: \"default\",\n}\n\nexport default MyButton;","/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/api/kobert.js",[],[],"/Users/kimjuyeon/SwitchBF/Switchnote_Front/src/api/gpt.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/index.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/App.js",["265","266","267","268"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/reportWebVitals.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/TxtInput.js",["269","270","271","272","273"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/UpdateInfo.js",["274","275"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/SignUp.js",["276","277","278","279","280","281","282","283","284"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/PPTSel.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/PPTUpload.js",["285"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Templates.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Main.js",["286","287","288","289","290","291","292"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Guide.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/FindIdPw.js",["293","294","295","296"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/TextEditor.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/SignIn.js",["297","298","299"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/Workspace.js",["300","301","302","303","304"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/PPTEditor.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/MyButton.js",["305"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/TextInput.js",["306"],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/components/MyTextarea.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/api/kobert.js",[],[],"/Users/kimjuyeon/SwitchPPT/Switchnote_Front/src/api/gpt.js",[],[],{"ruleId":"307","severity":1,"message":"308","line":17,"column":27,"nodeType":"309","messageId":"310","endLine":17,"endColumn":33},{"ruleId":"307","severity":1,"message":"311","line":17,"column":50,"nodeType":"309","messageId":"310","endLine":17,"endColumn":56},{"ruleId":"307","severity":1,"message":"312","line":17,"column":64,"nodeType":"309","messageId":"310","endLine":17,"endColumn":72},{"ruleId":"307","severity":1,"message":"313","line":57,"column":9,"nodeType":"309","messageId":"310","endLine":57,"endColumn":23},{"ruleId":"307","severity":1,"message":"314","line":3,"column":23,"nodeType":"309","messageId":"310","endLine":3,"endColumn":36},{"ruleId":"307","severity":1,"message":"315","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":19},{"ruleId":"307","severity":1,"message":"316","line":22,"column":7,"nodeType":"309","messageId":"310","endLine":22,"endColumn":19},{"ruleId":"307","severity":1,"message":"317","line":32,"column":11,"nodeType":"309","messageId":"310","endLine":32,"endColumn":23},{"ruleId":"318","severity":1,"message":"319","line":56,"column":25,"nodeType":"320","endLine":56,"endColumn":84},{"ruleId":"318","severity":1,"message":"319","line":66,"column":33,"nodeType":"320","endLine":66,"endColumn":93},{"ruleId":"318","severity":1,"message":"319","line":90,"column":33,"nodeType":"320","endLine":90,"endColumn":92},{"ruleId":"307","severity":1,"message":"321","line":1,"column":28,"nodeType":"309","messageId":"310","endLine":1,"endColumn":34},{"ruleId":"307","severity":1,"message":"322","line":15,"column":10,"nodeType":"309","messageId":"310","endLine":15,"endColumn":24},{"ruleId":"323","severity":1,"message":"324","line":32,"column":6,"nodeType":"325","endLine":32,"endColumn":17,"suggestions":"326"},{"ruleId":"307","severity":1,"message":"327","line":53,"column":10,"nodeType":"309","messageId":"310","endLine":53,"endColumn":14},{"ruleId":"307","severity":1,"message":"328","line":53,"column":16,"nodeType":"309","messageId":"310","endLine":53,"endColumn":23},{"ruleId":"307","severity":1,"message":"314","line":8,"column":23,"nodeType":"309","messageId":"310","endLine":8,"endColumn":36},{"ruleId":"307","severity":1,"message":"329","line":11,"column":10,"nodeType":"309","messageId":"310","endLine":11,"endColumn":14},{"ruleId":"307","severity":1,"message":"316","line":14,"column":7,"nodeType":"309","messageId":"310","endLine":14,"endColumn":19},{"ruleId":"307","severity":1,"message":"330","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":18},{"ruleId":"307","severity":1,"message":"331","line":20,"column":9,"nodeType":"309","messageId":"310","endLine":20,"endColumn":19},{"ruleId":"307","severity":1,"message":"332","line":24,"column":9,"nodeType":"309","messageId":"310","endLine":24,"endColumn":26},{"ruleId":"307","severity":1,"message":"333","line":25,"column":9,"nodeType":"309","messageId":"310","endLine":25,"endColumn":28},{"ruleId":"307","severity":1,"message":"334","line":26,"column":9,"nodeType":"309","messageId":"310","endLine":26,"endColumn":30},{"ruleId":"307","severity":1,"message":"335","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":14},{"ruleId":"307","severity":1,"message":"314","line":7,"column":23,"nodeType":"309","messageId":"310","endLine":7,"endColumn":36},{"ruleId":"307","severity":1,"message":"315","line":11,"column":10,"nodeType":"309","messageId":"310","endLine":11,"endColumn":19},{"ruleId":"307","severity":1,"message":"316","line":26,"column":7,"nodeType":"309","messageId":"310","endLine":26,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":54,"column":7,"nodeType":"320","endLine":58,"endColumn":8},{"ruleId":"307","severity":1,"message":"314","line":8,"column":23,"nodeType":"309","messageId":"310","endLine":8,"endColumn":36},{"ruleId":"307","severity":1,"message":"338","line":11,"column":8,"nodeType":"309","messageId":"310","endLine":11,"endColumn":13},{"ruleId":"307","severity":1,"message":"316","line":13,"column":7,"nodeType":"309","messageId":"310","endLine":13,"endColumn":19},{"ruleId":"307","severity":1,"message":"339","line":25,"column":10,"nodeType":"309","messageId":"310","endLine":25,"endColumn":25},{"ruleId":"307","severity":1,"message":"340","line":25,"column":27,"nodeType":"309","messageId":"310","endLine":25,"endColumn":45},{"ruleId":"307","severity":1,"message":"341","line":138,"column":9,"nodeType":"309","messageId":"310","endLine":138,"endColumn":32},{"ruleId":"307","severity":1,"message":"342","line":144,"column":9,"nodeType":"309","messageId":"310","endLine":144,"endColumn":31},{"ruleId":"307","severity":1,"message":"343","line":148,"column":9,"nodeType":"309","messageId":"310","endLine":148,"endColumn":39},{"ruleId":"307","severity":1,"message":"344","line":152,"column":9,"nodeType":"309","messageId":"310","endLine":152,"endColumn":40},{"ruleId":"307","severity":1,"message":"314","line":8,"column":23,"nodeType":"309","messageId":"310","endLine":8,"endColumn":36},{"ruleId":"307","severity":1,"message":"316","line":11,"column":7,"nodeType":"309","messageId":"310","endLine":11,"endColumn":19},{"ruleId":"307","severity":1,"message":"345","line":1,"column":9,"nodeType":"309","messageId":"310","endLine":1,"endColumn":17},{"ruleId":"307","severity":1,"message":"346","line":5,"column":11,"nodeType":"309","messageId":"310","endLine":5,"endColumn":18},{"ruleId":"307","severity":1,"message":"308","line":17,"column":27,"nodeType":"309","messageId":"310","endLine":17,"endColumn":33},{"ruleId":"307","severity":1,"message":"311","line":17,"column":50,"nodeType":"309","messageId":"310","endLine":17,"endColumn":56},{"ruleId":"307","severity":1,"message":"312","line":17,"column":64,"nodeType":"309","messageId":"310","endLine":17,"endColumn":72},{"ruleId":"307","severity":1,"message":"313","line":57,"column":9,"nodeType":"309","messageId":"310","endLine":57,"endColumn":23},{"ruleId":"307","severity":1,"message":"321","line":1,"column":28,"nodeType":"309","messageId":"310","endLine":1,"endColumn":34},{"ruleId":"307","severity":1,"message":"322","line":15,"column":10,"nodeType":"309","messageId":"310","endLine":15,"endColumn":24},{"ruleId":"323","severity":1,"message":"324","line":32,"column":6,"nodeType":"325","endLine":32,"endColumn":17,"suggestions":"347"},{"ruleId":"307","severity":1,"message":"327","line":53,"column":10,"nodeType":"309","messageId":"310","endLine":53,"endColumn":14},{"ruleId":"307","severity":1,"message":"328","line":53,"column":16,"nodeType":"309","messageId":"310","endLine":53,"endColumn":23},{"ruleId":"307","severity":1,"message":"314","line":8,"column":23,"nodeType":"309","messageId":"310","endLine":8,"endColumn":36},{"ruleId":"307","severity":1,"message":"316","line":11,"column":7,"nodeType":"309","messageId":"310","endLine":11,"endColumn":19},{"ruleId":"307","severity":1,"message":"314","line":8,"column":23,"nodeType":"309","messageId":"310","endLine":8,"endColumn":36},{"ruleId":"307","severity":1,"message":"338","line":11,"column":8,"nodeType":"309","messageId":"310","endLine":11,"endColumn":13},{"ruleId":"307","severity":1,"message":"316","line":13,"column":7,"nodeType":"309","messageId":"310","endLine":13,"endColumn":19},{"ruleId":"307","severity":1,"message":"339","line":25,"column":10,"nodeType":"309","messageId":"310","endLine":25,"endColumn":25},{"ruleId":"307","severity":1,"message":"340","line":25,"column":27,"nodeType":"309","messageId":"310","endLine":25,"endColumn":45},{"ruleId":"307","severity":1,"message":"341","line":138,"column":9,"nodeType":"309","messageId":"310","endLine":138,"endColumn":32},{"ruleId":"307","severity":1,"message":"342","line":144,"column":9,"nodeType":"309","messageId":"310","endLine":144,"endColumn":31},{"ruleId":"307","severity":1,"message":"343","line":148,"column":9,"nodeType":"309","messageId":"310","endLine":148,"endColumn":39},{"ruleId":"307","severity":1,"message":"344","line":152,"column":9,"nodeType":"309","messageId":"310","endLine":152,"endColumn":40},{"ruleId":"336","severity":1,"message":"337","line":54,"column":7,"nodeType":"320","endLine":58,"endColumn":8},{"ruleId":"307","severity":1,"message":"314","line":3,"column":23,"nodeType":"309","messageId":"310","endLine":3,"endColumn":36},{"ruleId":"307","severity":1,"message":"315","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":19},{"ruleId":"307","severity":1,"message":"316","line":22,"column":7,"nodeType":"309","messageId":"310","endLine":22,"endColumn":19},{"ruleId":"307","severity":1,"message":"317","line":32,"column":11,"nodeType":"309","messageId":"310","endLine":32,"endColumn":23},{"ruleId":"318","severity":1,"message":"319","line":56,"column":25,"nodeType":"320","endLine":56,"endColumn":84},{"ruleId":"318","severity":1,"message":"319","line":66,"column":33,"nodeType":"320","endLine":66,"endColumn":93},{"ruleId":"318","severity":1,"message":"319","line":90,"column":33,"nodeType":"320","endLine":90,"endColumn":92},{"ruleId":"307","severity":1,"message":"335","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":14},{"ruleId":"307","severity":1,"message":"314","line":7,"column":23,"nodeType":"309","messageId":"310","endLine":7,"endColumn":36},{"ruleId":"307","severity":1,"message":"315","line":11,"column":10,"nodeType":"309","messageId":"310","endLine":11,"endColumn":19},{"ruleId":"307","severity":1,"message":"316","line":26,"column":7,"nodeType":"309","messageId":"310","endLine":26,"endColumn":19},{"ruleId":"307","severity":1,"message":"314","line":8,"column":23,"nodeType":"309","messageId":"310","endLine":8,"endColumn":36},{"ruleId":"307","severity":1,"message":"329","line":11,"column":10,"nodeType":"309","messageId":"310","endLine":11,"endColumn":14},{"ruleId":"307","severity":1,"message":"316","line":14,"column":7,"nodeType":"309","messageId":"310","endLine":14,"endColumn":19},{"ruleId":"307","severity":1,"message":"330","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":18},{"ruleId":"307","severity":1,"message":"331","line":20,"column":9,"nodeType":"309","messageId":"310","endLine":20,"endColumn":19},{"ruleId":"307","severity":1,"message":"332","line":24,"column":9,"nodeType":"309","messageId":"310","endLine":24,"endColumn":26},{"ruleId":"307","severity":1,"message":"333","line":25,"column":9,"nodeType":"309","messageId":"310","endLine":25,"endColumn":28},{"ruleId":"307","severity":1,"message":"334","line":26,"column":9,"nodeType":"309","messageId":"310","endLine":26,"endColumn":30},{"ruleId":"307","severity":1,"message":"346","line":5,"column":11,"nodeType":"309","messageId":"310","endLine":5,"endColumn":18},{"ruleId":"307","severity":1,"message":"345","line":1,"column":9,"nodeType":"309","messageId":"310","endLine":1,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Navigate' is defined but never used.","'getProjectById' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'Copyright' is defined but never used.","'defaultTheme' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'projectContent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjectById'. Either include it or remove the dependency array. If 'getProjectById' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["348"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'json' is defined but never used.","'menuOpen' is assigned a value but never used.","'toggleMenu' is assigned a value but never used.","'handleEditProject' is assigned a value but never used.","'handleDeleteProject' is assigned a value but never used.","'handleDownloadProject' is assigned a value but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'showPolicyPopup' is assigned a value but never used.","'setShowPolicyPopup' is assigned a value but never used.","'handleAgreePolicyChange' is assigned a value but never used.","'handleAgreePolicyClick' is assigned a value but never used.","'handleAgreeInfoCollectionClick' is assigned a value but never used.","'handleAgreePromotionEmailsClick' is assigned a value but never used.","'useState' is defined but never used.","'btnType' is assigned a value but never used.",["349"],{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},"Update the dependencies array to be: [getProjectById, projectId]",{"range":"353","text":"354"},{"range":"355","text":"354"},[1209,1220],"[getProjectById, projectId]",[1211,1222]]