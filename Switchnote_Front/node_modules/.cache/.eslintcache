[{"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\index.js":"1","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\reportWebVitals.js":"2","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\App.js":"3","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\TxtInput.js":"4","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Guide.js":"5","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\PPTSel.js":"6","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Main.js":"7","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\FindIdPw.js":"8","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\PPTUpload.js":"9","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\TextEditor.js":"10","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\SignUp.js":"11","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\UpdateInfo.js":"12","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\PPTEditor.js":"13","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\SignIn.js":"14","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Templates.js":"15","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Workspace.js":"16","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\MyButton.js":"17","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\MyTextarea.js":"18","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\api\\gpt.js":"19","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\textInput.js":"20","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\TextInput.js":"21","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\api\\kobert.js":"22"},{"size":606,"mtime":1697906263310,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1697906263314,"results":"25","hashOfConfig":"24"},{"size":3699,"mtime":1697906263027,"results":"26","hashOfConfig":"24"},{"size":6733,"mtime":1698430621106,"results":"27","hashOfConfig":"24"},{"size":4184,"mtime":1697906263031,"results":"28","hashOfConfig":"24"},{"size":1424,"mtime":1697906263039,"results":"29","hashOfConfig":"24"},{"size":4605,"mtime":1698430661409,"results":"30","hashOfConfig":"24"},{"size":7170,"mtime":1697906263030,"results":"31","hashOfConfig":"24"},{"size":2133,"mtime":1697906263042,"results":"32","hashOfConfig":"24"},{"size":565,"mtime":1698430545493,"results":"33","hashOfConfig":"24"},{"size":18428,"mtime":1697906263044,"results":"34","hashOfConfig":"24"},{"size":10423,"mtime":1697906263048,"results":"35","hashOfConfig":"24"},{"size":1389,"mtime":1697906263037,"results":"36","hashOfConfig":"24"},{"size":7285,"mtime":1697906263042,"results":"37","hashOfConfig":"24"},{"size":5244,"mtime":1697906263044,"results":"38","hashOfConfig":"24"},{"size":2282,"mtime":1697906263050,"results":"39","hashOfConfig":"24"},{"size":413,"mtime":1697906263033,"results":"40","hashOfConfig":"24"},{"size":634,"mtime":1698308460444,"results":"41","hashOfConfig":"24"},{"size":3907,"mtime":1698225186704,"results":"42","hashOfConfig":"24"},{"size":648,"mtime":1697972470165,"results":"43","hashOfConfig":"24"},{"size":579,"mtime":1698434506898,"results":"44","hashOfConfig":"24"},{"size":590,"mtime":1698328945997,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1m6ooyj",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"49"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"49"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\index.js",[],[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\reportWebVitals.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\App.js",["121","122","123","124"],[],"//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Templates from './components/Templates';\r\nimport Guide from './components/Guide';\r\nimport TxtInput from './components/TxtInput';\r\nimport PPTSel from './components/PPTSel';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport SignIn from './components/SignIn'\r\nimport SignUp from './components/SignUp'\r\nimport FindIdPw from './components/FindIdPw'\r\nimport UpdateInfo from './components/UpdateInfo'\r\nimport TextEditor from \"./components/TextEditor\";\r\nimport PPTUpload from \"./components/PPTUpload\";\r\nimport Workspace from \"./components/Workspace\";\r\nimport PPTEditor from \"./components/PPTEditor\";\r\nimport { BrowserRouter as Router, Routes, Route, Switch, Link, Navigate } from 'react-router-dom';\r\nimport {useState, createContext} from 'react';\r\n\r\n/*아직 DB 구축 전이라서 이렇게 넣음..*/\r\nconst projects = [\r\n  {\r\n    id: 1,\r\n    type: \"ppt\",\r\n    title: \"프로젝트 1\"\r\n  },\r\n  {\r\n    id: 2,\r\n    type: \"ppt\",\r\n    title: \"프로젝트 2\"\r\n  },\r\n  {\r\n    id: 3,\r\n    type: \"script\",\r\n    title: \"프로젝트 3\"\r\n  },\r\n];\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction App() {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    // 로그인 처리\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // 로그아웃 처리\r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem(\"key\");\r\n  };\r\n\r\n  /*아직 DB 구축 전이라서 이렇게 넣음..*/\r\n  const getProjectById = (id) => {\r\n    return projects.find((project) => project.id === parseInt(id));\r\n  };\r\n\r\n  return (\r\n  \r\n    <BrowserRouter>\r\n     <AuthContext.Provider value={{ isLoggedIn, handleLogin, handleLogout }}>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <div>\r\n            <div id=\"nav\">\r\n                <Link to='/'><img src={require('./logo.png')} alt=\"logo\" /></Link>\r\n                <ul>\r\n                <li><Link to=\"/Workspace\" className=\"nav1\">WORKSPACE</Link></li>\r\n                <li><Link to='/Templates' className='nav1'>TEMPLATE</Link></li>\r\n                <li><Link to=\"/Guide\" className=\"nav1\">GUIDE</Link></li>\r\n                <li><Link to=\"/UpdateInfo\" className=\"nav1\">MYPAGE</Link></li>\r\n                {/* <li><Link to='/SignIn' className=\"logoutB\">s</Link></li> */}\r\n                {isLoggedIn? (<li><Link to=\"/\" onClick={handleLogout} className=\"logoutB\">logout</Link></li>):(\r\n                        <li><Link to=\"/SignIn\" className=\"logoutB\">login</Link></li>\r\n                                )}\r\n                </ul> \r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Main />} exact/>\r\n          <Route path=\"/Templates\" element={<Templates />}/>\r\n          <Route path=\"/Guide\" element={<Guide />}/>\r\n          <Route path=\"/TxtInput\" element={<TxtInput />}/>\r\n          <Route path=\"/PPTSel\" element={<PPTSel />}/>\r\n          <Route path=\"/SignIn\" element={<SignIn />}/>\r\n          <Route path=\"/SignUp\" element={<SignUp />}/>\r\n          <Route path=\"/FindIdPw\" element={<FindIdPw />}/>\r\n          <Route path=\"/UpdateInfo\" element={<UpdateInfo />}/>\r\n          <Route path=\"/TextEditor\" element={<TextEditor />}/>\r\n          <Route path=\"/PPTUpload\" element={<PPTUpload />}/>\r\n          <Route path=\"/Workspace\" element={<Workspace projects={projects} />} />\r\n          <Route path=\"/PPTEditor\" element={<PPTEditor />}/>\r\n        </Routes>\r\n        {/* <Main /> */}\r\n      </header>\r\n    </div>\r\n     </AuthContext.Provider>\r\n    </BrowserRouter>\r\n   \r\n  );\r\n}\r\n \r\nexport default App;\r\n","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\TxtInput.js",["125","126","127","128","129","130"],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Guide.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\PPTSel.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Main.js",["131","132","133","134","135","136","137"],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\FindIdPw.js",["138","139","140","141"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n// import{Link} from 'react-router-doms'\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {/*{'Copyright © '}*/}\r\n            {/*<Link color=\"inherit\" href=\"https://naver.com/\">*/}\r\n            {/*    Your Website*/}\r\n            {/*</Link>{' '}*/}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme({\r\n    typography: {\r\n        fontSize:12,\r\n        fontFamily: [\r\n            'Noto Sans KR'\r\n        ].join(','),\r\n    },\r\n});\r\n\r\nexport default function FindIdPwPage() {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        console.log({\r\n            email: data.get('id'),\r\n            password: data.get('password'),\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        {/* <ThemeProvider theme={defaultTheme}> */}\r\n            <div>{/* <Container component=\"main\" maxWidth=\"xs\"> */}\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 10,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        \"& fieldset\": {borderTopColor:'white',\r\n                                        borderRightColor:'white',\r\n                                        borderLeftColor:'white',\r\n                                        borderBottomColor:'black',\r\n                                        borderRadius:0}\r\n                    }}\r\n                >\r\n                \r\n                    <div class = \"pageDiv\">\r\n                        <div class =\"pageTitle\" >\r\n                            아이디 / 비밀번호 찾기\r\n                        </div>\r\n                        <div class =\"pageAddScript\" >\r\n                            당신의 작업은 소중하니까\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <table className='findDiv'><tr>\r\n                    <div className='findContent'>\r\n                        <td><div className='middleScript'>아이디 찾기</div>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                    <Grid container spacing={2}>\r\n                    <Grid container direction=\"row\" alignItems=\"center\">\r\n                        <Grid item xs={12} sm={9}>\r\n                            <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"EMAIL\"\r\n                            label=\"EMAIL\"\r\n                            name=\"EMAIL\"\r\n                            autoComplete=\"EMAIL\"\r\n                            autoFocus\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <button className='sendBtn'>발송</button>\r\n                        </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" alignItems=\"center\">\r\n                        <Grid item xs={12} sm={9}>\r\n                            <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        </Grid>\r\n                        < Grid item xs = { 12 } sm = { 3 }>\r\n                        <button className='authenBtn'>인증</button>\r\n                        </ Grid >\r\n                        </Grid>\r\n                        </Grid>\r\n                    </Box></td>\r\n                    </div>\r\n                    <td><div className='horizontalLine'></div></td>\r\n                    <td><div className='findContent'>\r\n                    <div className='middleScript'>비밀번호 찾기</div>\r\n                    {/* <Grid container spacing={2}> */}\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                        <Grid>\r\n                            <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"id\"\r\n                            label=\"Id\"\r\n                            name=\"id\"\r\n                            autoComplete=\"id\"\r\n                            autoFocus\r\n                        />\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" alignItems=\"center\">\r\n                        <Grid item xs={12} sm={9}>\r\n                            <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"email\"\r\n                            label=\"EMAIL\"\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <button className='sendBtn'>발송</button>\r\n                        </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" alignItems=\"center\">\r\n                            <Grid item xs={12} sm={9}>\r\n                            <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"email_authentication\"\r\n                            label=\"전송된 인증번호를 입력해주세요\"\r\n                            type=\"email_authentication\"\r\n                            id=\"email_authentication\"\r\n                        /> \r\n                        </Grid>\r\n                        < Grid item xs = { 12 } sm = { 3 }>\r\n                        <button className='authenBtn'>인증</button>\r\n                        </ Grid >\r\n                        </Grid>\r\n                    </Box>\r\n                    {/* </Grid> */}\r\n                    </div></td>\r\n                    </tr></table>\r\n                </Box>\r\n                \r\n                {/*<Copyright sx={{ mt: 8, mb: 4 }} />*/}\r\n            </div>{/* </Container> */}\r\n        {/* </ThemeProvider> */}\r\n        </div> \r\n    );\r\n}","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\PPTUpload.js",["142"],[],"import React, { useRef, useState } from 'react';\r\nimport './PPTUpload.css';\r\nimport MyButton from './MyButton.js'\r\n\r\nfunction PPTUpload() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const fileInputRef = useRef();\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleBrowseFiles = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const files = event.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      setSelectedFile(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 일단 제가 사용한 css 적용할게요_jy */}\r\n      <p class='pageTitle'>PPT to Script</p>\r\n      <p class='pageAddScript'>버튼 하나, 나의 든든한 서포터</p> \r\n      {/* <p style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', color:'black' }}>버튼 하나, 나의 든든한 서포터</p> */}\r\n      <p style={{ color: 'lightgray', marginTop: '100px'}}>PPT 업로드</p>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\".ppt,.pptx\"\r\n        ref={fileInputRef}\r\n        onChange={handleFileUpload}\r\n        hidden\r\n      />\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <div className=\"ppt-upload-box\" onDrop={handleFileSelect} onDragOver={(event) => event.preventDefault()}>\r\n              <p>{selectedFile ? selectedFile.name : \"이곳에 파일을 드래그하세요.\"}</p>\r\n          </div>\r\n\r\n          <MyButton \r\n              text={'파일찾기'}\r\n              onClick={handleBrowseFiles}\r\n              type={\"gray\"}\r\n              size={\"small\"}\r\n          />\r\n      </div>\r\n\r\n      <a\r\n        href=\"#\"\r\n        style={{ color: '#4982F7', textDecoration: 'underline' }}\r\n        onClick={handleBrowseFiles}\r\n      >\r\n        워크스페이스에서 찾기\r\n      </a>\r\n\r\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '60px'}}>\r\n      <MyButton text={'대본생성'}\r\n            type={\"blue\"}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PPTUpload;\r\n","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\TextEditor.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\SignUp.js",["143","144","145","146","147","148","149","150","151"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function SignUpPage() {\r\n  const [loginId, setLoginId]=React.useState('');\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [passwordCheck, setPasswordCheck] = React.useState('');\r\n  const [nickname, setNickname] = React.useState('');\r\n  const [birthYear, setBirthYear ] = React.useState('');\r\n  const [birthMonth, setBirthMonth ] = React.useState('');\r\n  const [birthDay, setBirthDay] = React.useState('');\r\n  const [job, setJob] = React.useState('');\r\n  const [showPolicyPopup, setShowPolicyPopup] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(!agreePolicy || !agreeInfoCollection){\r\n      alert('필수 항목에 동의해야 합니다.');\r\n      return;\r\n    }\r\n    \r\n    if (!loginId || !email || !password || !passwordCheck || !nickname) {\r\n      alert('필수 정보를 입력하지 않았습니다.');\r\n      return;\r\n    }\r\n    \r\n    fetch('/jwt-api-login/join',{\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n      },\r\n      body:JSON.stringify({nickname,email,loginId,password,passwordCheck,birthYear,birthMonth,birthDay,job,gender,agreePolicy:agreePolicy ? 'Y' : 'N',agreeInfoCollection:agreeInfoCollection ? 'Y' : 'N',agreePromotionEmails:agreePromotionEmails ? 'Y' : 'N'}),\r\n    })\r\n      .then((response)=>response.text())\r\n      .then((data)=>{\r\n        console.log(data);\r\n        if (data === \"로그인 아이디가 중복됩니다.\") {\r\n          alert(\"로그인 아이디가 중복됩니다.\");\r\n        } else if (data === \"이메일이 중복됩니다.\") {\r\n          alert(\"이메일이 중복됩니다.\");\r\n        } else if (data === \"닉네임이 중복됩니다.\") {\r\n          alert(\"닉네임이 중복됩니다.\");\r\n        } else if (data === \"비밀번호가 일치하지 않습니다.\") {\r\n          alert(\"비밀번호가 일치하지 않습니다.\");\r\n        } else if (data === \"회원가입 성공\") {\r\n          alert(\"정상적으로 회원등록이 되었습니다!\");\r\n          navigate('/SignIn');\r\n        }\r\n      })\r\n      .catch((error)=>{\r\n        console.error(error);\r\n      });\r\n\r\n\r\n\r\n  };\r\n  const handleId = (event) =>{\r\n    event.preventDefault();\r\n  fetch('/jwt-api-login/check-id', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      loginId: loginId,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.available) {\r\n        alert('사용할 수 없는 아이디입니다. 다른 아이디를 입력해주세요.');\r\n      } else {\r\n        alert('사용 가능한 아이디입니다.');\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n  const handleEmail = (event) =>{\r\n    event.preventDefault();\r\n  fetch('/jwt-api-login/check-email', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.available) {\r\n        alert('중복된 이메일입니다. 다른 이메일을 입력해주세요.');\r\n      } else {\r\n        alert('사용 가능한 이메일입니다.');\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n  const handlePasswordCheck = (event) => {\r\n    event.preventDefault();\r\n  \r\n    if (password !== passwordCheck) {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n      return;\r\n    } else {\r\n      alert('비밀번호가 확인되었습니다.')\r\n    }\r\n  };\r\n  const [gender, setGender] = useState('');\r\n\r\n  const handleGenderChange = (event) => {\r\n    setGender(event.target.value);\r\n  };\r\n\r\n  const [agreePolicy, setAgreePolicy] = useState(false);\r\n  const [agreeInfoCollection, setAgreeInfoCollection] = useState(false);\r\n  const [agreePromotionEmails, setAgreePromotionEmails] = useState(false);\r\n  \r\n  const handleAgreePolicyChange = (event) => {\r\n    setAgreePolicy(event.target.checked);\r\n    setAgreeInfoCollection(event.target.checked);\r\n    setAgreePromotionEmails(event.target.checked);\r\n  };\r\n\r\n  const handleAgreePolicyClick = () => {\r\n    showAgreePolicyPopup();\r\n  };\r\n  \r\n  const handleAgreeInfoCollectionClick = () => {\r\n    showAgreeInfoCollection();\r\n  };\r\n  \r\n  const handleAgreePromotionEmailsClick = () => {\r\n    showAgreePromotionEmails();\r\n  };\r\n\r\n  // 각 약관 팝업 표시 함수\r\n  const showAgreePolicyPopup = () => {\r\n    alert(`\r\n    제 1조 (목적)\r\n    이 약관은 서비스 이용자가 Switch Note 플랫폼을 이용함에 있어 필요한 규정과 권리, 의무, 책임 등 기본적인 사항을 정하는 것을 목적으로 합니다.\r\n    \r\n    제 2조 (약관의 효력 및 변경)\r\n    1. 본 약관은 서비스를 이용하고자 하는 모든 사용자에게 적용됩니다.\r\n    2. Switch Note는 필요한 경우 언제든지 본 약관을 변경할 수 있으며, 변경된 약관은 Switch Note 웹사이트나 애플리케이션 내에서 공지함으로써 효력을 발생합니다.\r\n    \r\n    제 3조 (서비스의 제공 및 중단)\r\n    1. Switch Note는 회원에게 지속적으로 안정적인 서비스를 제공하기 위해 최선의 노력을 다합니다.\r\n    2. 다만, 시스템 점검, 보수, 장애 발생 등 부득이한 사유로 인해 일시적으로 서비스 제공이 중단될 수 있습니다.\r\n    \r\n    기타 상세한 내용은 해당 웹사이트나 애플리케이션에서 확인하실 수 있습니다.\r\n    `);\r\n  };\r\n  \r\n  const showAgreeInfoCollection = () => {\r\n    alert(`\r\n    제 1조 (개인 정보 수집 항목)\r\n    1. Switch Note는 서비스 제공을 위해 다음과 같은 개인 정보를 수집합니다:\r\n       - 이름, 이메일 주소, 연락처 등 회원 가입 시 제공된 정보\r\n       - 서비스 이용 기록, 접속 로그 등의 기술적인 정보\r\n    \r\n    제 2조 (개인 정보 수집 및 이용 목적)\r\n    1. Switch Note는 다음과 같은 목적으로 개인 정보를 수집 및 이용합니다:\r\n       - 회원 가입 및 관리\r\n       - 서비스 제공 및 운영\r\n       - 공지사항 전달 등 마케팅 활동\r\n    \r\n    제 3조 (개인 정보 보유 기간)\r\n    1. Switch Note는 회원 탈퇴 시나 서비스 종료 요청 시까지 개인 정보를 보유합니다.\r\n    2. 단, 법령에 따라 보관이 필요한 경우 해당 법령에서 정한 기간 동안 개인 정보를 보관할 수 있습니다.\r\n    \r\n    기타 상세한 내용은 해당 웹사이트나 애플리케이션에서 확인하실 수 있습니다.\r\n    `);\r\n  };\r\n  \r\n  const showAgreePromotionEmails = () => {\r\n    alert(`\r\n    제 1조 (이벤트 등 프로모션 메일 수신 동의)\r\n    1. Switch Note는 회원에게 이벤트, 할인 혜택, 새로운 서비스 소식 등을 전달하기 위해 프로모션 메일을 발송할 수 있습니다.\r\n    2. 회원은 이벤트 등 프로모션 메일 수신에 대한 동의 여부를 선택할 수 있으며, 선택 사항입니다.\r\n    \r\n    제 2조 (동의 철회)\r\n    1. 회원은 언제든지 이벤트 등 프로모션 메일 수신에 대한 동의를 철회할 수 있습니다.\r\n    2. 동의 철회 시 더 이상 해당 내용을 포함한 프로모션 메일을 받지 않게 됩니다.\r\n    \r\n    기타 상세한 내용은 해당 웹사이트나 애플리케이션에서 확인하실 수 있습니다.\r\n    `);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        {/* <ThemeProvider theme={defaultTheme}> */}\r\n      {/* <div> */}\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n        <div class = \"pageDiv\">\r\n            <div class =\"pageTitle\" style={{marginTop:'50px'}}>\r\n                회원가입\r\n            </div>\r\n            <div class =\"pageAddScript\" >\r\n                편리함. 그 이상의 능력에 빠질 준비\r\n            </div>\r\n        </div>\r\n        <div className='signUpDataAll'>\r\n          <Box component=\"form\"  onSubmit={handleSubmit} noValidate\r\n          sx={{ mt: 3, alignItems: 'center',\r\n                        \"& fieldset\": {borderTopColor:'white',\r\n                                        borderRightColor:'white',\r\n                                        borderLeftColor:'white',\r\n                                        borderBottomColor:'black',\r\n                                        borderRadius:0\r\n                                        } }}>\r\n            <div className=\"setData\">\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                    autoComplete=\"username\"\r\n                    name=\"loginId\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"loginId\"\r\n                    label=\"ID\"\r\n                    value={loginId}\r\n                    onChange={(e)=>setLoginId(e.target.value)}\r\n                    autoFocus\r\n                    />\r\n                </Grid>\r\n                <button className='authenBtn' type=\"submit\" onClick={handleId}>확인</button>\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"EMAIL\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <button className='authenBtn' type=\"submit\" onClick={handleEmail}>확인</button>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type='password'\r\n                    autoComplete=\"new-password\"\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"passwordCheck\"\r\n                    label=\"Password Check\"\r\n                    type=\"password\"\r\n                    id=\"passwordCheck\"\r\n                    value={passwordCheck}\r\n                    onChange={(e)=>setPasswordCheck(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <button className='authenBtn' type=\"submit\" onClick={handlePasswordCheck}>확인</button>\r\n\r\n                </Grid>\r\n            </div>\r\n            <div className=\"middleScript\">개인정보</div>\r\n            <div className=\"userData\">\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={2} >이름</Grid>\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                    autoComplete=\"given-name\"\r\n                    name=\"nickname\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"nickname\"\r\n                    label=\"\"\r\n                    autoFocus\r\n                    type=\"nickname\"\r\n                    value={nickname}\r\n                    onChange={(e)=>setNickname(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2} >성별</Grid>\r\n                <Grid>\r\n                <div className=\"select\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"select\"\r\n                  name=\"gender\"\r\n                  value=\"Male\"\r\n                  checked={gender === 'Male'}\r\n                  onChange={handleGenderChange}\r\n                />\r\n                <label htmlFor=\"select\" className={gender === 'Male' ? \"selected\" : \"\"}>남성</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"select2\"\r\n                  name=\"gender\"\r\n                  value=\"Female\"\r\n                  checked={gender === 'Female'}\r\n                  onChange={handleGenderChange}\r\n                />\r\n                <label htmlFor=\"select2\" className={gender === 'Female' ? \"selected\" : \"\"}>여성</label>\r\n                \r\n              </div>\r\n                </Grid>\r\n                <div>\r\n                  \r\n                </div>\r\n                <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                  생년월일\r\n                  <Grid item xs={12} sm={3}>\r\n                    <TextField\r\n                      required\r\n                      fullWidth\r\n                      id=\"birth_year\"\r\n                      label=\"\"\r\n                      name=\"birth_year\"\r\n                      value={birthYear}\r\n                      onChange={(e)=>setBirthYear(e.target.value)}\r\n                    />\r\n                    \r\n                  </Grid>년\r\n                  <Grid item xs={12} sm={2}>\r\n                    <TextField\r\n                      required\r\n                      fullWidth\r\n                      id=\"birth_month\"\r\n                      label=\"\"\r\n                      name=\"birth_month\"\r\n                      value={birthMonth}\r\n                      onChange={(e)=>setBirthMonth(e.target.value)}\r\n                    />\r\n                    \r\n                  </Grid>월\r\n                  <Grid item xs={12} sm={2}>\r\n                    <TextField\r\n                      required\r\n                      fullWidth\r\n                      id=\"birth_day\"\r\n                      label=\"\"\r\n                      name=\"birth_day\"\r\n                      value={birthDay}\r\n                      onChange={(e)=>setBirthDay(e.target.value)}\r\n                    />\r\n                    \r\n                  </Grid>일 \r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" alignItems=\"center\" marginTop={'45px'} paddingLeft={'13px'} marginBottom={'50px'}>\r\n                  직업\r\n                  <Grid item xs={10}>\r\n                  <select name=\"job\" id=\"\" class=\"jobSelect\" onChange={(e) => setJob(e.target.value)}>\r\n                    <option value=\"0\" selected>현재 직업을 선택하세요</option>\r\n                    <option value=\"elementary\">초등학생</option>\r\n                    <option value=\"middle\">중학생</option>\r\n                    <option value=\"high\">고등학생</option>\r\n                    <option value=\"college\">대학생</option>\r\n                    <option value=\"professor\">교수</option>\r\n                    <option value=\"worker\">직장인</option>\r\n                    <option value=\"worker\">프리랜서</option>\r\n                    <option value=\"worker\">주부</option>\r\n                    <option value=\"worker\">기타</option>\r\n                  </select> \r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                \r\n                </Grid>\r\n            </div>\r\n            <div className='middleScript'>이용약관</div>\r\n            <div className='policy'>\r\n                <div className='policyContent'>\r\n                  <div class=\"custom-checkbox\">\r\n                    <input type=\"checkbox\" id=\"agreePolicy\" checked={agreePolicy} onChange={(e) => setAgreePolicy(e.target.checked)}/>\r\n                    <label for=\"agreePolicy\">이용약관 동의 (필수)</label>\r\n                    <button className='sendBtn' onClick={showAgreePolicyPopup}>확인</button>\r\n                  </div>\r\n                </div>\r\n                <div className='policyContent'>\r\n                  <div class=\"custom-checkbox\">\r\n                    <input type='checkbox' id='agreeInfoCollection' checked={agreeInfoCollection} onChange={(e) => setAgreeInfoCollection(e.target.checked)}/>\r\n                    <label for='agreeInfoCollection'>개인 정보 수집 및 이용 동의 (필수)</label>\r\n                    <button className='sendBtn' onClick={showAgreeInfoCollection}>확인</button>\r\n                  </div>\r\n                </div>\r\n                <div className='policyContent'>\r\n                  <div class='custom-checkbox'>\r\n                    <input type='checkbox' id='agreePromotionEmails' checked={agreePromotionEmails} onChange={(e) => setAgreePromotionEmails(e.target.checked)}/>\r\n                    <label for='agreePromotionEmails'>이벤트 등 프로모션 메일 수신 동의 (선택)</label>\r\n                    <button className='sendBtn' onClick={showAgreePromotionEmails}>확인</button>\r\n                  </div>\r\n                  \r\n            </div>\r\n            \r\n            </div>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2,\r\n                backgroundColor: '#4982F7',\r\n                fontFamily: 'Noto Sans KR',\r\n                borderRadius:2,\r\n                boxShadow:5,\r\n                textDecorationStyle:'bold',\r\n                marginBottom: 50\r\n            }}\r\n            >\r\n              회원가입\r\n            </Button>\r\n            {/* <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  계정이 이미 있으신가요? 로그인하러 가기\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n            </Box>\r\n          </div>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 5 }} /> */}\r\n      {/* </div> */}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\UpdateInfo.js",["152","153"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useState } from 'react';\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function UpdateInfoPage() {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    console.log({\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n    });\r\n  };\r\n  const [gender, setGender] = useState('');\r\n\r\n  const handleGenderChange = (event) => {\r\n    setGender(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        {/* <ThemeProvider theme={defaultTheme}> */}\r\n      {/* <div> */}\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n        <div class = \"pageDiv\">\r\n            <div class =\"pageTitle\" style={{marginTop:'50px'}}>\r\n                회원정보 수정\r\n            </div>\r\n            <div class =\"pageAddScript\" >\r\n                개인정보는 철저하게\r\n            </div>\r\n        </div>\r\n        <div className='signUpDataAll'>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} \r\n          sx={{ mt: 3, alignItems: 'center',\r\n                        \"& fieldset\": {borderTopColor:'white',\r\n                                        borderRightColor:'white',\r\n                                        borderLeftColor:'white',\r\n                                        borderBottomColor:'black',\r\n                                        borderRadius:0\r\n                                        } }}>\r\n            <div className=\"setData\">\r\n                <Grid container spacing={2}>\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\r\n                <Grid item xs={12} sm={3}>\r\n                  Id\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"given-name\"\r\n                    name=\"id\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"id\"\r\n                    label=\"Id\"\r\n                    autoFocus\r\n                    sx={{width:'300px'}}\r\n                    />\r\n                </Grid>\r\n                    \r\n                    </Grid>\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\r\n                <Grid item xs={12} sm={3}>\r\n                  EMAIL\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={7}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"EMAIL\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    />\r\n                </Grid>\r\n                < Grid item xs = { 12 } sm = {2}>\r\n                  <button className='sendBtn'>발송</button>\r\n                </ Grid >\r\n                </ Grid >\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\r\n                <Grid item xs={12} sm={3}>\r\n                  {''}\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={7}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"email_authentication\"\r\n                    label=\"전송된 인증번호를 입력해주세요\"\r\n                    name=\"email_authentication\"\r\n                    autoComplete=\"email-authentication-number\"\r\n                    />\r\n                </Grid>\r\n                < Grid item xs = { 12 } sm = {2}>\r\n                  <button className='authenBtn'>인증</button>\r\n                </ Grid >\r\n                </ Grid >\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\r\n                <Grid item xs={12} sm={3}>\r\n                  Password\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={9}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"password\"\r\n                    />\r\n                </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\r\n                <Grid item xs={12} sm={3}>\r\n                  PW Check\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={9}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"password_check\"\r\n                    label=\"Password Check\"\r\n                    type=\"password_check\"\r\n                    id=\"password_check\"\r\n                    />\r\n                </Grid>\r\n                </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div className=\"middleScript\">개인정보</div>\r\n            <div className=\"userData\">\r\n                <Grid container spacing={2}>\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\r\n                <Grid item xs={12} sm={3}>\r\n                  이름\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={9}>\r\n                    <TextField\r\n                    autoComplete=\"given-name\"\r\n                    name=\"user_name\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"user_name\"\r\n                    label=\"data\"\r\n                    autoFocus\r\n                    sx={{width:'300px'}}\r\n                    />\r\n                </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'} marginLeft={'3px'}>\r\n                <Grid item xs={2}>\r\n                  성별\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} sm={9}> */}\r\n                <Grid>\r\n                  <div className=\"select\">\r\n                \r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"select\"\r\n                  name=\"gender\"\r\n                  value=\"Male\"\r\n                  checked={gender === 'Male'}\r\n                  onChange={handleGenderChange}\r\n                />\r\n                <label htmlFor=\"select\" className={gender === 'Male' ? \"selected\" : \"\"}>남성</label>\r\n                \r\n                  <input\r\n                  type=\"radio\"\r\n                  id=\"select2\"\r\n                  name=\"gender\"\r\n                  value=\"Female\"\r\n                  checked={gender === 'Female'}\r\n                  onChange={handleGenderChange}\r\n                />\r\n                <label htmlFor=\"select2\" className={gender === 'Female' ? \"selected\" : \"\"}>여성</label>\r\n              </div>\r\n                </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" alignItems=\"center\" marginBottom={'20px'}>\r\n                생년월일\r\n                <Grid item xs={12} sm={3} sx={{marginLeft:'35px'}}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"birth_year\"\r\n                    label=\"\"\r\n                    name=\"birth_year\"\r\n                    />\r\n                </Grid>\r\n                년\r\n                <Grid item xs={12} sm={2}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"birth_month\"\r\n                    label=\"\"\r\n                    name=\"birth_month\"\r\n                    />\r\n                </Grid>\r\n                월\r\n                <Grid item xs={12} sm={2}>\r\n                    <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"birth_month\"\r\n                    label=\"\"\r\n                    name=\"birth_month\"\r\n                    />\r\n                </Grid>\r\n                일\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" alignItems=\"center\" marginTop={'45px'} paddingLeft={'13px'} marginBottom={'50px'}>\r\n                  직업\r\n                  <Grid item xs={10}>\r\n                  <select name=\"job\" id=\"\" class=\"jobSelect\">\r\n                    <option value=\"0\" selected>현재 직업을 선택하세요</option>\r\n                    <option value=\"elementary\">초등학생</option>\r\n                    <option value=\"middle\">중학생</option>\r\n                    <option value=\"high\">고등학생</option>\r\n                    <option value=\"college\">대학생</option>\r\n                    <option value=\"professor\">교수</option>\r\n                    <option value=\"worker\">직장인</option>\r\n                    <option value=\"worker\">프리랜서</option>\r\n                    <option value=\"worker\">주부</option>\r\n                    <option value=\"worker\">기타</option>\r\n                  </select> \r\n                  </Grid>\r\n                </Grid>\r\n                </Grid>\r\n            </div>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2,\r\n                backgroundColor: '#4982F7',\r\n                fontFamily: 'Noto Sans KR',\r\n                borderRadius:2,\r\n                boxShadow:5,\r\n                textDecorationStyle:'bold',\r\n                marginBottom: 50\r\n            }}\r\n            >\r\n              수정완료\r\n            </Button>\r\n            {/* <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  계정이 이미 있으신가요? 로그인하러 가기\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n            </Box>\r\n          </div>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 5 }} /> */}\r\n      {/* </div> */}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\PPTEditor.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\SignIn.js",["154","155","156"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport {useContext,useState} from 'react';\r\nimport { AuthContext } from '../App';\r\nimport { json, useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst defaultTheme = createTheme({\r\n    typography: {\r\n        fontSize:12,\r\n        fontFamily: [\r\n            'Noto Sans KR'\r\n        ].join(','),\r\n    },\r\n});\r\n\r\nexport default function SignInPage() {\r\n    const [loginId, setLoginId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { isLoggedIn, handleLogin } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            fetch('/jwt-api-login/login', {\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body: JSON.stringify({loginId,password}),\r\n            })\r\n                // .then(response=>response.json())\r\n                .then((response)=>{\r\n                    if(response.ok) {\r\n                        return response.text();\r\n                    }else{\r\n                        throw new Error('로그인에 실패했습니다.');\r\n                    }\r\n                })\r\n                .then((data)=>{\r\n                    const jwtToken = data;\r\n                    axios.defaults.headers.common[\r\n                        \"Authorization\"\r\n                    ] = `Bearer ${jwtToken}`;\r\n                    localStorage.setItem('jwtToken',jwtToken);\r\n                    console.log(jwtToken);\r\n                    handleLogin();\r\n                    navigate(\"/\");\r\n                })\r\n                .catch((error)=>{\r\n                    console.error(error);\r\n                    alert('로그인에 실패했습니다.');\r\n\r\n                });\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        {/* <ThemeProvider theme={defaultTheme}> */}\r\n            <div>{/* <Container component=\"main\" maxWidth=\"xs\"> */}\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 10,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        \"& fieldset\": {borderTopColor:'white',\r\n                                        borderRightColor:'white',\r\n                                        borderLeftColor:'white',\r\n                                        borderBottomColor:'black',\r\n                                        borderRadius:0}\r\n                    }}\r\n                >\r\n                    <div class = \"pageDiv\">\r\n                        <div class =\"pageTitle\" >\r\n                            로그인\r\n                        </div>\r\n                        <div class =\"pageAddScript\" >\r\n                            당신의 작업은 소중하니까\r\n                        </div>\r\n                    </div>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"loginId\"\r\n                            label=\"Id\"\r\n                            value={loginId}\r\n                            onChange={(e)=>setLoginId(e.target.value)}\r\n                            name=\"loginId\"\r\n                            autoComplete=\"username\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            value={password}\r\n                            onChange={(e)=>setPassword(e.target.value)}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <div class=\"easyLogin\">\r\n                        {/* <a href=\"/\"><img src={require('./images/easyLogin.png')} width=\"350px\" alt=\"Easy-Login\" border=\"0\" /></a>                         */}\r\n                        </div>\r\n                        {isLoggedIn ? (\r\n                            <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2, \r\n                                backgroundColor: '#4982F7',\r\n                                fontFamily: 'Noto Sans KR',\r\n                                borderRadius:2,\r\n                                boxShadow:5,\r\n                                textDecorationStyle:'bold'\r\n                            }}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            이 문자열이 보이면 안 되는데\r\n                        </Button>\r\n                        ):(\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2, \r\n                                backgroundColor: '#4982F7',\r\n                                fontFamily: 'Noto Sans KR',\r\n                                borderRadius:2,\r\n                                boxShadow:5,\r\n                                textDecorationStyle:'bold'\r\n                            }}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        )\r\n                        }\r\n                        \r\n                        \r\n                        <Grid container sx={{textAlign:'justify'}}>\r\n                            <Grid item xs>\r\n                                <Link href=\"/SignUp\" \r\n                                variant=\"body2\" \r\n                                sx={{color:'#9B9B9B', textDecorationLine:'none', margin:'0',padding:0}}>\r\n                                    회원가입\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item >\r\n                                <Link href=\"/FindIdPw\" \r\n                                variant=\"body2\"\r\n                                sx={{color:'#9B9B9B', textDecorationLine:'none'}}\r\n                                >\r\n                                    {\"아이디 / 비밀번호 찾기\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n            </div>\r\n        </div> \r\n    );\r\n}","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Templates.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\Workspace.js",["157","158","159","160","161"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Workspace.css';\r\n\r\nfunction Workspace({ projects }) {\r\n  const [selected, setSelected] = useState('ppt');\r\n  const [menuOpen, setMenuOpen] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleProjectClick = (type, projectId) => {\r\n    if(type === 'ppt') {\r\n      navigate(`/PPTEditor/${projectId}`);\r\n    }\r\n    else if (type === 'script') {\r\n      navigate(`/TextEditor/${projectId}`);\r\n    }\r\n  };  \r\n\r\n  // 더보기 메뉴 토글\r\n  const toggleMenu = (id) => {\r\n    setMenuOpen(prevId => prevId === id ? null : id);\r\n  };\r\n\r\n  const handleEditProject = (project) => {/* 수정 기능*/};\r\n  const handleDeleteProject = (id) => {/* 삭제 기능*/};\r\n  const handleDownloadProject = (project) => {/* 다운로드 기능*/};\r\n\r\n  return (\r\n    <div className=\"workspace\">\r\n      <div className=\"project-container\">\r\n        <button\r\n          className={`project-btn ppt ${selected === 'ppt' ? 'active' : ''}`}\r\n          onClick={() => setSelected('ppt')}\r\n        >\r\n          PPT\r\n        </button>\r\n        <button\r\n          className={`project-btn script ${selected === 'script' ? 'active' : ''}`}\r\n          onClick={() => setSelected('script')}\r\n        >\r\n        Script \r\n        </button>\r\n      </div>\r\n      {/* 선택된 버튼에 따라 배경색상 변경 */}\r\n      <div \r\n        className={`project-list`}\r\n        style={{\r\n          backgroundColor: selected === 'ppt' ? 'skyblue' : 'lightgray',\r\n        }}\r\n      >\r\n        {projects.filter((project) => project.type === selected).map((project) =>\r\n          (\r\n            <div key={project.id} \r\n                className={`project`} \r\n                onClick={() => handleProjectClick(project.type || 'script', project.id)}>\r\n              <div className=\"title\">\r\n                <span>\r\n                  {project.title.length > 10 ? project.title.slice(0,10) + '...' : project.title}\r\n                </span>\r\n              </div>\r\n              <div className=\"thumbnail\">\r\n                <img src={project.thumbnail} alt={`${project.title} thumbnail`} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Workspace;\r\n","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\MyButton.js",["162"],[],"import React from 'react';\r\n\r\nconst MyButton = ({text, type, size, onClick})=>{\r\n\r\n    const btnType = ['blue','gray','line'].includes(type)?type:\"default\";\r\n\r\n    return(\r\n        <button className={[\"MyButton\",`MyButton_${type}`,`MyButton_${size}`].join(\" \")} onClick={onClick}>\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nMyButton.defaultProps = {\r\n    type: \"default\",\r\n}\r\n\r\nexport default MyButton;","C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\MyTextarea.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\api\\gpt.js",[],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\textInput.js",["163","164","165"],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\components\\TextInput.js",["166"],[],"C:\\Users\\1222p\\OneDrive\\바탕 화면\\2023 한이음 ICT\\switchnote_all\\Switchnote_Front\\src\\api\\kobert.js",[],[],{"ruleId":"167","severity":1,"message":"168","line":17,"column":27,"nodeType":"169","messageId":"170","endLine":17,"endColumn":33},{"ruleId":"167","severity":1,"message":"171","line":17,"column":50,"nodeType":"169","messageId":"170","endLine":17,"endColumn":56},{"ruleId":"167","severity":1,"message":"172","line":17,"column":64,"nodeType":"169","messageId":"170","endLine":17,"endColumn":72},{"ruleId":"167","severity":1,"message":"173","line":57,"column":9,"nodeType":"169","messageId":"170","endLine":57,"endColumn":23},{"ruleId":"167","severity":1,"message":"174","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":34},{"ruleId":"167","severity":1,"message":"175","line":14,"column":10,"nodeType":"169","messageId":"170","endLine":14,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":31,"column":6,"nodeType":"178","endLine":31,"endColumn":17,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":50,"column":10,"nodeType":"169","messageId":"170","endLine":50,"endColumn":14},{"ruleId":"167","severity":1,"message":"181","line":50,"column":16,"nodeType":"169","messageId":"170","endLine":50,"endColumn":23},{"ruleId":"167","severity":1,"message":"182","line":72,"column":9,"nodeType":"169","messageId":"170","endLine":72,"endColumn":27},{"ruleId":"167","severity":1,"message":"183","line":3,"column":23,"nodeType":"169","messageId":"170","endLine":3,"endColumn":36},{"ruleId":"167","severity":1,"message":"184","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":19},{"ruleId":"167","severity":1,"message":"185","line":22,"column":7,"nodeType":"169","messageId":"170","endLine":22,"endColumn":19},{"ruleId":"167","severity":1,"message":"186","line":32,"column":11,"nodeType":"169","messageId":"170","endLine":32,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":56,"column":25,"nodeType":"189","endLine":56,"endColumn":84},{"ruleId":"187","severity":1,"message":"188","line":66,"column":33,"nodeType":"189","endLine":66,"endColumn":93},{"ruleId":"187","severity":1,"message":"188","line":90,"column":33,"nodeType":"189","endLine":90,"endColumn":92},{"ruleId":"167","severity":1,"message":"190","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"183","line":7,"column":23,"nodeType":"169","messageId":"170","endLine":7,"endColumn":36},{"ruleId":"167","severity":1,"message":"184","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":19},{"ruleId":"167","severity":1,"message":"185","line":26,"column":7,"nodeType":"169","messageId":"170","endLine":26,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":54,"column":7,"nodeType":"189","endLine":58,"endColumn":8},{"ruleId":"167","severity":1,"message":"183","line":8,"column":23,"nodeType":"169","messageId":"170","endLine":8,"endColumn":36},{"ruleId":"167","severity":1,"message":"193","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":13},{"ruleId":"167","severity":1,"message":"185","line":13,"column":7,"nodeType":"169","messageId":"170","endLine":13,"endColumn":19},{"ruleId":"167","severity":1,"message":"194","line":25,"column":10,"nodeType":"169","messageId":"170","endLine":25,"endColumn":25},{"ruleId":"167","severity":1,"message":"195","line":25,"column":27,"nodeType":"169","messageId":"170","endLine":25,"endColumn":45},{"ruleId":"167","severity":1,"message":"196","line":138,"column":9,"nodeType":"169","messageId":"170","endLine":138,"endColumn":32},{"ruleId":"167","severity":1,"message":"197","line":144,"column":9,"nodeType":"169","messageId":"170","endLine":144,"endColumn":31},{"ruleId":"167","severity":1,"message":"198","line":148,"column":9,"nodeType":"169","messageId":"170","endLine":148,"endColumn":39},{"ruleId":"167","severity":1,"message":"199","line":152,"column":9,"nodeType":"169","messageId":"170","endLine":152,"endColumn":40},{"ruleId":"167","severity":1,"message":"183","line":8,"column":23,"nodeType":"169","messageId":"170","endLine":8,"endColumn":36},{"ruleId":"167","severity":1,"message":"185","line":11,"column":7,"nodeType":"169","messageId":"170","endLine":11,"endColumn":19},{"ruleId":"167","severity":1,"message":"183","line":8,"column":23,"nodeType":"169","messageId":"170","endLine":8,"endColumn":36},{"ruleId":"167","severity":1,"message":"200","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":14},{"ruleId":"167","severity":1,"message":"185","line":14,"column":7,"nodeType":"169","messageId":"170","endLine":14,"endColumn":19},{"ruleId":"167","severity":1,"message":"201","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":18},{"ruleId":"167","severity":1,"message":"202","line":20,"column":9,"nodeType":"169","messageId":"170","endLine":20,"endColumn":19},{"ruleId":"167","severity":1,"message":"203","line":24,"column":9,"nodeType":"169","messageId":"170","endLine":24,"endColumn":26},{"ruleId":"167","severity":1,"message":"204","line":25,"column":9,"nodeType":"169","messageId":"170","endLine":25,"endColumn":28},{"ruleId":"167","severity":1,"message":"205","line":26,"column":9,"nodeType":"169","messageId":"170","endLine":26,"endColumn":30},{"ruleId":"167","severity":1,"message":"206","line":5,"column":11,"nodeType":"169","messageId":"170","endLine":5,"endColumn":18},{"ruleId":"207","severity":2,"message":"208","line":2,"column":22,"nodeType":"169","messageId":"209","endLine":2,"endColumn":27},{"ruleId":"167","severity":1,"message":"210","line":5,"column":7,"nodeType":"169","messageId":"170","endLine":5,"endColumn":16},{"ruleId":"207","severity":2,"message":"211","line":13,"column":16,"nodeType":"169","messageId":"209","endLine":13,"endColumn":25},{"ruleId":"167","severity":1,"message":"212","line":1,"column":9,"nodeType":"169","messageId":"170","endLine":1,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Navigate' is defined but never used.","'getProjectById' is assigned a value but never used.","'useRef' is defined but never used.","'projectContent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjectById'. Either include it or remove the dependency array. If 'getProjectById' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["213"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'transformGPTOutput' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'Copyright' is defined but never used.","'defaultTheme' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'showPolicyPopup' is assigned a value but never used.","'setShowPolicyPopup' is assigned a value but never used.","'handleAgreePolicyChange' is assigned a value but never used.","'handleAgreePolicyClick' is assigned a value but never used.","'handleAgreeInfoCollectionClick' is assigned a value but never used.","'handleAgreePromotionEmailsClick' is assigned a value but never used.","'json' is defined but never used.","'menuOpen' is assigned a value but never used.","'toggleMenu' is assigned a value but never used.","'handleEditProject' is assigned a value but never used.","'handleDeleteProject' is assigned a value but never used.","'handleDownloadProject' is assigned a value but never used.","'btnType' is assigned a value but never used.","no-undef","'Input' is not defined.","undef","'TextInput' is assigned a value but never used.","'textInput' is not defined.","'useState' is defined but never used.",{"desc":"214","fix":"215"},"Update the dependencies array to be: [getProjectById, projectId]",{"range":"216","text":"217"},[1188,1199],"[getProjectById, projectId]"]